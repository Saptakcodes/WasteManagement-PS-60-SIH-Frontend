// src/components/WorkerTraining.jsx
import React, { useState, useEffect } from 'react';
import { 
  BookOpen, 
  CheckCircle, 
  Award, 
  Play,
  FileText,
  Download,
  Clock,
  BarChart3,
  ChevronRight,
  ChevronLeft,
  X,
  Star,
  Trophy,
  Users,
  Globe,
  Volume2,
  HelpCircle,
  TrendingUp,
  Calendar,
  Target,
  Quote,
  Home,
  User,
  LogOut,
  Sun,
  Moon,
  Menu,
  Search,
  Bookmark,
  Shield,
  AlertTriangle,
  Recycle,
  Truck,
  MessageCircle,
  ThumbsUp,
  Eye
} from 'lucide-react';
import { motion, AnimatePresence } from 'framer-motion';
import { useInView } from 'react-intersection-observer';

const WorkerTraining = () => {
  // State for module progress
  const [currentModule, setCurrentModule] = useState(0);
  const [moduleProgress, setModuleProgress] = useState(
    Array(8).fill(false).map(() => ({ completed: false, score: 0 }))
  );
  const [showQuiz, setShowQuiz] = useState(false);
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [selectedAnswer, setSelectedAnswer] = useState(null);
  const [quizScore, setQuizScore] = useState(0);
  const [showCertificate, setShowCertificate] = useState(false);
  const [language, setLanguage] = useState('en');
  const [userName, setUserName] = useState('Green Champion');
  const [learningStreak, setLearningStreak] = useState(3);
  const [totalPoints, setTotalPoints] = useState(450);
  const [showHelp, setShowHelp] = useState(false);
  const [ttsEnabled, setTtsEnabled] = useState(false);
  const [darkMode, setDarkMode] = useState(false);
  const [activeTab, setActiveTab] = useState('training');
  const [showMobileMenu, setShowMobileMenu] = useState(false);
  const [bookmarkedModules, setBookmarkedModules] = useState([]);
  const [searchQuery, setSearchQuery] = useState('');
  const [showResources, setShowResources] = useState(true);
  const [activeResource, setActiveResource] = useState(0);
  
  // Mock user data - in a real app, this would come from authentication
  useEffect(() => {
    // Simulate fetching user data
    setUserName('Rajesh Kumar');
    
  }, []);

  // Apply dark mode class to body
  useEffect(() => {
    if (darkMode) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }, [darkMode]);

// Training modules data
  const trainingModules = [
    {
      id: 1,
      title: {
        en: "Introduction to Waste Management",
        hi: "рдЕрдкрд╢рд┐рд╖реНрдЯ рдкреНрд░рдмрдВрдзрди рдХрд╛ рдкрд░рд┐рдЪрдп",
        bn: "ржмрж░рзНржЬрзНржп ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛рж░ ржкрж░рж┐ржЪрж┐рждрж┐",
        ta: "роХро┤ро┐ро╡рпБ роорпЗро▓ро╛рогрпНроорпИ роЕро▒ро┐роорпБроХроорпН"
      },
      duration: "15 min",
      icon: 'ЁЯУЪ',
      content: {
        en: {
          description: "Learn about India's waste management challenges and the importance of proper waste handling for environmental sustainability.",
          resources: [
            { type: 'video', title: 'Waste Crisis in India', duration: '5:20' },
            { type: 'text', title: 'Key Statistics and Facts' },
            { type: 'infographic', title: 'Waste Generation Trends' }
          ]
        },
        hi: {
          description: "рднрд╛рд░рдд рдХреА рдЕрдкрд╢рд┐рд╖реНрдЯ рдкреНрд░рдмрдВрдзрди рдЪреБрдиреМрддрд┐рдпреЛрдВ рдФрд░ рдкрд░реНрдпрд╛рд╡рд░рдгреАрдп рд╕реНрдерд┐рд░рддрд╛ рдХреЗ рд▓рд┐рдП рдЙрдЪрд┐рдд рдЕрдкрд╢рд┐рд╖реНрдЯ рдкреНрд░рдмрдВрдзрди рдХреЗ рдорд╣рддреНрд╡ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдиреЗрдВред",
          resources: [
            { type: 'video', title: 'рднрд╛рд░рдд рдореЗрдВ рдЕрдкрд╢рд┐рд╖реНрдЯ рд╕рдВрдХрдЯ', duration: '5:20' },
            { type: 'text', title: 'рдореБрдЦреНрдп рдЖрдБрдХрдбрд╝реЗ рдФрд░ рддрдереНрдп' },
            { type: 'infographic', title: 'рдЕрдкрд╢рд┐рд╖реНрдЯ рдЙрддреНрдкрд╛рджрди рд░реБрдЭрд╛рди' }
          ]
        },
        bn: {
          description: "ржнрж╛рж░рждрзЗрж░ ржмрж░рзНржЬрзНржп ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛рж░ ржЪрзНржпрж╛рж▓рзЗржЮрзНржЬ ржПржмржВ ржкрж░рж┐ржмрзЗрж╢ржЧржд рж╕рзНржерж╛ржпрж╝рж┐рждрзНржмрзЗрж░ ржЬржирзНржп рж╕ржарж┐ржХ ржмрж░рзНржЬрзНржп рж╣рзНржпрж╛ржирзНржбрж▓рж┐ржВ ржПрж░ ржЧрзБрж░рзБрждрзНржм рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирзБржиред",
          resources: [
            { type: 'video', title: 'ржнрж╛рж░рждрзЗ ржмрж░рзНржЬрзНржп рж╕ржВржХржЯ', duration: '5:20' },
            { type: 'text', title: 'ржкрзНрж░ржзрж╛ржи ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи ржПржмржВ рждржерзНржп' },
            { type: 'infographic', title: 'ржмрж░рзНржЬрзНржп ржЙрзОржкрж╛ржжржирзЗрж░ ржкрзНрж░ржмржгрждрж╛' }
          ]
        },
        ta: {
          description: "роЗроирпНродро┐ропро╛ро╡ро┐ройрпН роХро┤ро┐ро╡рпБ роорпЗро▓ро╛рогрпНроорпИ роЪро╡ро╛ро▓рпНроХро│рпН рооро▒рпНро▒рпБроорпН роЪрпБро▒рпНро▒ро╛роЯро▓рпН роиро┐ро▓рпИродрпНродройрпНроорпИроХрпНроХрпБ роЪро░ро┐ропро╛рой роХро┤ро┐ро╡рпБ роХрпИропро╛ро│рпБродро▓ро┐ройрпН роорпБроХрпНроХро┐ропродрпНродрпБро╡роорпН рокро▒рпНро▒ро┐ роЕро▒ро┐роХ.",
          resources: [
            { type: 'video', title: 'роЗроирпНродро┐ропро╛ро╡ро┐ро▓рпН роХро┤ро┐ро╡рпБ роирпЖро░рпБроХрпНроХроЯро┐', duration: '5:20' },
            { type: 'text', title: 'роорпБроХрпНроХро┐роп рокрпБро│рпНро│ро┐ро╡ро┐ро╡ро░роЩрпНроХро│рпН рооро▒рпНро▒рпБроорпН роЙрогрпНроорпИроХро│рпН' },
            { type: 'infographic', title: 'роХро┤ро┐ро╡рпБ роЙро▒рпНрокродрпНродро┐ рокрпЛроХрпНроХрпБроХро│рпН' }
          ]
        }
      },
      quiz: [
        {
          question: {
            en: "What percentage of waste in India is scientifically treated?",
            hi: "рднрд╛рд░рдд рдореЗрдВ рдХрд┐рддрдиреЗ рдкреНрд░рддрд┐рд╢рдд рдХрдЪрд░реЗ рдХрд╛ рд╡реИрдЬреНрдЮрд╛рдирд┐рдХ рддрд░реАрдХреЗ рд╕реЗ рдЙрдкрдЪрд╛рд░ рдХрд┐рдпрд╛ рдЬрд╛рддрд╛ рд╣реИ?",
            bn: "ржнрж╛рж░рждрзЗ ржХржд рж╢рждрж╛ржВрж╢ ржмрж░рзНржЬрзНржп ржмрзИржЬрзНржЮрж╛ржирж┐ржХржнрж╛ржмрзЗ ржЪрж┐ржХрж┐рждрзНрж╕рж╛ ржХрж░рж╛ рж╣ржпрж╝?",
            ta: "роЗроирпНродро┐ропро╛ро╡ро┐ро▓рпН роОродрпНродройрпИ роЪродро╡рпАрод роХро┤ро┐ро╡рпБроХро│рпН ро╡ро┐роЮрпНроЮро╛рой ро░рпАродро┐ропро╛роХ роЪро┐роХро┐роЪрпНроЪрпИ роЕро│ро┐роХрпНроХрокрпНрокроЯрпБроХро┐ройрпНро▒рой?"
          },
          options: [
            { id: 1, text: { en: "25%", hi: "25%", bn: "25%", ta: "25%" } },
            { id: 2, text: { en: "54%", hi: "54%", bn: "54%", ta: "54%" } },
            { id: 3, text: { en: "70%", hi: "70%", bn: "70%", ta: "70%" } },
            { id: 4, text: { en: "85%", hi: "85%", bn: "85%", ta: "85%" } }
          ],
          correctAnswer: 2,
          explanation: {
            en: "Only about 54% of waste in India is scientifically treated, highlighting the need for better waste management practices.",
            hi: "рднрд╛рд░рдд рдореЗрдВ рдХреЗрд╡рд▓ рд▓рдЧрднрдЧ 54% рдХрдЪрд░реЗ рдХрд╛ рд╡реИрдЬреНрдЮрд╛рдирд┐рдХ рддрд░реАрдХреЗ рд╕реЗ рдЙрдкрдЪрд╛рд░ рдХрд┐рдпрд╛ рдЬрд╛рддрд╛ рд╣реИ, рдЬреЛ рдмреЗрд╣рддрд░ рдЕрдкрд╢рд┐рд╖реНрдЯ рдкреНрд░рдмрдВрдзрди рдкреНрд░рдерд╛рдУрдВ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдХреЛ рд░реЗрдЦрд╛рдВрдХрд┐рдд рдХрд░рддрд╛ рд╣реИред",
            bn: "ржнрж╛рж░рждрзЗ ржорж╛рждрзНрж░ рзлрзк% ржмрж░рзНржЬрзНржп ржмрзИржЬрзНржЮрж╛ржирж┐ржХржнрж╛ржмрзЗ ржЪрж┐ржХрж┐рждрзНрж╕рж╛ ржХрж░рж╛ рж╣ржпрж╝, ржпрж╛цЫ┤хе╜ ржмрж░рзНржЬрзНржп ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛ ржЕржирзБрж╢рзАрж▓ржирзЗрж░ ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝рждрж╛ рждрзБрж▓рзЗ ржзрж░рзЗред",
            ta: "роЗроирпНродро┐ропро╛ро╡ро┐ро▓рпН роЪрпБрооро╛ро░рпН 54% роХро┤ро┐ро╡рпБроХро│рпН роороЯрпНроЯрпБроорпЗ ро╡ро┐роЮрпНроЮро╛рой ро░рпАродро┐ропро╛роХ роЪро┐роХро┐роЪрпНроЪрпИ роЕро│ро┐роХрпНроХрокрпНрокроЯрпБроХро┐ройрпНро▒рой, роЗродрпБ роЪро┐ро▒роирпНрод роХро┤ро┐ро╡рпБ роорпЗро▓ро╛рогрпНроорпИ роироЯрпИроорпБро▒рпИроХро│ро┐ройрпН родрпЗро╡рпИропрпИ роОроЯрпБродрпНродрпБроХрпНроХро╛роЯрпНроЯрпБроХро┐ро▒родрпБ."
          }
        },
        {
          question: {
            en: "Which mission focuses on cleanliness in India?",
            hi: "рднрд╛рд░рдд рдореЗрдВ рд╕реНрд╡рдЪреНрдЫрддрд╛ рдкрд░ рдХреМрди рд╕рд╛ рдорд┐рд╢рди рдХреЗрдВрджреНрд░рд┐рдд рд╣реИ?",
            bn: "ржнрж╛рж░рждрзЗ ржкрж░рж┐рж╖рзНржХрж╛рж░-ржкрж░рж┐ржЪрзНржЫржирзНржирждрж╛рж░ ржЙржкрж░ ржХрзЛржи ржорж┐рж╢ржи ржлрзЛржХрж╛рж╕ ржХрж░рзЗ?",
            ta: "роЗроирпНродро┐ропро╛ро╡ро┐ро▓рпН роЪрпБродрпНродродрпНродро┐ро▓рпН роОроирпНрод родро┐роЯрпНроЯроорпН роХро╡ройроорпН роЪрпЖро▓рпБродрпНродрпБроХро┐ро▒родрпБ?"
          },
          options: [
            { id: 1, text: { en: "Digital India", hi: "рдбрд┐рдЬрд┐рдЯрд▓ рдЗрдВрдбрд┐рдпрд╛", bn: "ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржЗржирзНржбрж┐ржпрж╝рж╛", ta: "роЯро┐роЬро┐роЯрпНроЯро▓рпН роЗроирпНродро┐ропро╛" } },
            { id: 2, text: { en: "Make in India", hi: "рдореЗрдХ рдЗрди рдЗрдВрдбрд┐рдпрд╛", bn: "ржорзЗржХ ржЗржи ржЗржирзНржбрж┐ржпрж╝рж╛", ta: "роорпЗроХрпН роЗройрпН роЗроирпНродро┐ропро╛" } },
            { id: 3, text: { en: "Swachh Bharat Mission", hi: "рд╕реНрд╡рдЪреНрдЫ рднрд╛рд░рдд рдорд┐рд╢рди", bn: "рж╕рзНржмржЪрзНржЫ ржнрж╛рж░ржд ржорж┐рж╢ржи", ta: "роЪрпБро╡роЪрпН рокро╛ро░родрпН рооро┐ро╖ройрпН" } },
            { id: 4, text: { en: "Smart Cities Mission", hi: "рд╕реНрдорд╛рд░реНрдЯ рд╕рд┐рдЯреАрдЬ рдорд┐рд╢рди", bn: "рж╕рзНржорж╛рж░рзНржЯ рж╕рж┐ржЯрж┐ржЬ ржорж┐рж╢ржи", ta: "ро╕рпНрооро╛ро░рпНроЯрпН роЪро┐роЯрпНроЯрпАро╕рпН рооро┐ро╖ройрпН" } }
          ],
          correctAnswer: 3,
          explanation: {
            en: "Swachh Bharat Mission (Clean India Mission) is the national campaign by the Government of India covering 4,041 statutory cities and towns to clean the streets, roads and infrastructure of the country.",
            hi: "рд╕реНрд╡рдЪреНрдЫ рднрд╛рд░рдд рдорд┐рд╢рди рднрд╛рд░рдд рд╕рд░рдХрд╛рд░ рджреНрд╡рд╛рд░рд╛ рджреЗрд╢ рдХреА рд╕рдбрд╝рдХреЛрдВ, рд╕рдбрд╝рдХреЛрдВ рдФрд░ рдмреБрдирд┐рдпрд╛рджреА рдврд╛рдВрдЪреЗ рдХреЛ рд╕рд╛рдл рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП 4,041 рд╡реИрдзрд╛рдирд┐рдХ рд╢рд╣рд░реЛрдВ рдФрд░ рдХрд╕реНрдмреЛрдВ рдХреЛ рдХрд╡рд░ рдХрд░рдиреЗ рд╡рд╛рд▓рд╛ рдПрдХ рд░рд╛рд╖реНрдЯреНрд░реАрдп рдЕрднрд┐рдпрд╛рди рд╣реИред",
            bn: "рж╕рзНржмржЪрзНржЫ ржнрж╛рж░ржд ржорж┐рж╢ржи рж╣рж▓ ржнрж╛рж░ржд рж╕рж░ржХрж╛рж░рзЗрж░ ржПржХржЯрж┐ ржЬрж╛рждрзАржпрж╝ ржкрзНрж░ржЪрж╛рж░ржгрж╛ ржпрж╛ ржжрзЗрж╢рзЗрж░ рж░рж╛рж╕рзНрждрж╛, рж╕ржбрж╝ржХ ржПржмржВ ржЕржмржХрж╛ржарж╛ржорзЛ ржкрж░рж┐рж╖рзНржХрж╛рж░ ржХрж░рждрзЗ рзк,рзжрзкрззржЯрж┐ рж╕ржВржмрж┐ржзрж┐ржмржжрзНржз рж╢рж╣рж░ ржПржмржВ рж╢рж╣рж░ржЧрзБрж▓рж┐ржХрзЗ ржХржнрж╛рж░ ржХрж░рзЗред",
            ta: "роЪрпБро╡роЪрпН рокро╛ро░родрпН рооро┐ро╖ройрпН роОройрпНрокродрпБ роиро╛роЯрпНроЯро┐ройрпН родрпЖро░рпБроХрпНроХро│рпН, роЪро╛ро▓рпИроХро│рпН рооро▒рпНро▒рпБроорпН роЙро│рпНроХроЯрпНроЯроорпИрокрпНрокрпИ роЪрпБродрпНродроорпН роЪрпЖропрпНро╡родро▒рпНроХро╛роХ 4,041 роЪроЯрпНроЯрокрпНрокрпВро░рпНро╡ роироХро░роЩрпНроХро│рпН рооро▒рпНро▒рпБроорпН рокроЯрпНроЯрогроЩрпНроХро│рпИ роЙро│рпНро│роЯроХрпНроХро┐роп роЗроирпНродро┐роп роЕро░роЪро┐ройрпН родрпЗроЪро┐роп рокро┐ро░роЪрпНроЪро╛ро░рооро╛роХрпБроорпН."
          }
        }
      ]
    },
    {
      id: 2,
      title: {
        en: "Waste Segregation & Three-Bin System",
        hi: "рдЕрдкрд╢рд┐рд╖реНрдЯ рдкреГрдердХреНрдХрд░рдг рдФрд░ рддреАрди-рдмрд┐рди рдкреНрд░рдгрд╛рд▓реА",
        bn: "ржмрж░рзНржЬрзНржп ржкрзГржержХрзАржХрж░ржг ржПржмржВ рждрж┐ржи-ржмрж┐ржи рж╕рж┐рж╕рзНржЯрзЗржо",
        ta: "роХро┤ро┐ро╡рпБ рокро┐ро░ро┐родрпНродро▓рпН рооро▒рпНро▒рпБроорпН роорпВройрпНро▒рпБ-рокрпЖроЯрпНроЯро┐ роЕроорпИрокрпНрокрпБ"
      },
      duration: "20 min",
      icon: 'ЁЯЧСя╕П',
      content: {
        en: {
          description: "Master the art of source segregation using the three-bin system for wet, dry, and hazardous waste.",
          resources: [
            { type: 'video', title: 'How to Segregate Properly', duration: '7:45' },
            { type: 'text', title: 'Three-Bin System Guide' },
            { type: 'infographic', title: 'Color Coding for Bins' },
            { type: 'interactive', title: 'Segregation Practice' }
          ]
        },
        hi: {
          description: "рдЧреАрд▓реЗ, рд╕реВрдЦреЗ рдФрд░ рдЦрддрд░рдирд╛рдХ рдХрдЪрд░реЗ рдХреЗ рд▓рд┐рдП рддреАрди-рдмрд┐рди рдкреНрд░рдгрд╛рд▓реА рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ рд╕реНрд░реЛрдд рдкреГрдердХреНрдХрд░рдг рдХреА рдХрд▓рд╛ рдореЗрдВ рдорд╣рд╛рд░рдд рд╣рд╛рд╕рд┐рд▓ рдХрд░реЗрдВред",
          resources: [
            { type: 'video', title: 'рд╕рд╣реА рддрд░реАрдХреЗ рд╕реЗ рдХреИрд╕реЗ рдЕрд▓рдЧ рдХрд░реЗрдВ', duration: '7:45' },
            { type: 'text', title: 'рддреАрди-рдмрд┐рди рдкреНрд░рдгрд╛рд▓реА рдЧрд╛рдЗрдб' },
            { type: 'infographic', title: 'рдмрд┐рди рдХреЗ рд▓рд┐рдП рд░рдВрдЧ рдХреЛрдбрд┐рдВрдЧ' },
            { type: 'interactive', title: 'рдкреГрдердХреНрдХрд░рдг рдЕрднреНрдпрд╛рд╕' }
          ]
        },
        bn: {
          description: "ржнрж┐ржЬрж╛, рж╢рзБржХржирзЛ ржПржмржВ ржмрж┐ржкржЬрзНржЬржиржХ ржмрж░рзНржЬрзНржпрзЗрж░ ржЬржирзНржп рждрж┐ржи-ржмрж┐ржи рж╕рж┐рж╕рзНржЯрзЗржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЙрзОрж╕ ржкрзГржержХрзАржХрж░ржгрзЗрж░ рж╢рж┐рж▓рзНржкрзЗ ржжржХрзНрж╖рждрж╛ ржЕрж░рзНржЬржи ржХрж░рзБржиред",
          resources: [
            { type: 'video', title: 'рж╕ржарж┐ржХржнрж╛ржмрзЗ ржХрзАржнрж╛ржмрзЗ ржЖрж▓рж╛ржжрж╛ ржХрж░ржмрзЗржи', duration: '7:45' },
            { type: 'text', title: 'рждрж┐ржи-ржмрж┐ржи рж╕рж┐рж╕рзНржЯрзЗржо ржЧрж╛ржЗржб' },
            { type: 'infographic', title: 'ржмрж┐ржирзЗрж░ ржЬржирзНржп рж░ржЩрзЗрж░ ржХрзЛржбрж┐ржВ' },
            { type: 'interactive', title: 'ржкрзГржержХрзАржХрж░ржг ржЕржирзБрж╢рзАрж▓ржи' }
          ]
        },
        ta: {
          description: "роИро░рооро╛рой, роЙро▓ро░рпН рооро▒рпНро▒рпБроорпН роЖрокродрпНродро╛рой роХро┤ро┐ро╡рпБроХро│рпБроХрпНроХро╛рой роорпВройрпНро▒рпБ-рокрпЖроЯрпНроЯро┐ роЕроорпИрокрпНрокрпИрокрпН рокропройрпНрокроЯрпБродрпНродро┐ роорпВро▓рокрпН рокро┐ро░ро┐родрпНродро▓ро┐ройрпН роХро▓рпИродрпНродро┐ро▒ройро┐ро▓рпН родрпЗро░рпНроЪрпНроЪро┐ рокрпЖро▒ро╡рпБроорпН.",
          resources: [
            { type: 'video', title: 'роЪро░ро┐ропро╛роХ роОро╡рпНро╡ро╛ро▒рпБ рокро┐ро░ро┐роХрпНроХ ро╡рпЗрогрпНроЯрпБроорпН', duration: '7:45' },
            { type: 'text', title: 'роорпВройрпНро▒рпБ-рокрпЖроЯрпНроЯро┐ роЕроорпИрокрпНрокрпБ ро╡ро┤ро┐роХро╛роЯрпНроЯро┐' },
            { type: 'infographic', title: 'рокрпЖроЯрпНроЯро┐роХро│рпБроХрпНроХро╛рой ро╡рогрпНрог роХрпБро▒ро┐ропрпАроЯрпБ' },
            { type: 'interactive', title: 'рокро┐ро░ро┐родрпНродро▓рпН рокропро┐ро▒рпНроЪро┐' }
          ]
        }
      },
      quiz: [
        {
          question: {
            en: "Which color bin is typically used for dry waste?",
            hi: "рдЖрдорддреМрд░ рдкрд░ рд╕реВрдЦреЗ рдХрдЪрд░реЗ рдХреЗ рд▓рд┐рдП рдХрд┐рд╕ рд░рдВрдЧ рдХреА рдбрд╕реНрдЯрдмрд┐рди рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд┐рдпрд╛ рдЬрд╛рддрд╛ рд╣реИ?",
            bn: "рж╢рзБржХржирзЛ ржмрж░рзНржЬрзНржпрзЗрж░ ржЬржирзНржп рж╕рж╛ржзрж╛рж░ржгржд ржХрзЛржи рж░ржЩрзЗрж░ ржмрж┐ржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝?",
            ta: "роЙро▓ро░рпН роХро┤ро┐ро╡рпБроХро│рпБроХрпНроХрпБ рокрпКродрпБро╡ро╛роХ роОроирпНрод ро╡рогрпНрогродрпН родрпКроЯрпНроЯро┐ рокропройрпНрокроЯрпБродрпНродрокрпНрокроЯрпБроХро┐ро▒родрпБ?"
          },
          options: [
            { id: 1, text: { en: "Blue", hi: "рдиреАрд▓рд╛", bn: "ржирзАрж▓", ta: "роирпАро▓роорпН" } },
            { id: 2, text: { en: "Green", hi: "рд╣рд░рд╛", bn: "рж╕ржмрзБржЬ", ta: "рокроЪрпНроЪрпИ" } },
            { id: 3, text: { en: "Black", hi: "рдХрд╛рд▓рд╛", bn: "ржХрж╛рж▓рзЛ", ta: "роХро░рпБрокрпНрокрпБ" } },
            { id: 4, text: { en: "Red", hi: "рд▓рд╛рд▓", bn: "рж▓рж╛рж▓", ta: "роЪро┐ро╡рокрпНрокрпБ" } }
          ],
          correctAnswer: 1,
          explanation: {
            en: "Blue bins are typically used for dry/recyclable waste like paper, plastic, metal, and glass.",
            hi: "рдиреАрд▓реЗ рдбрд┐рдмреНрдмреЗ рдЖрдорддреМрд░ рдкрд░ рд╕реВрдЦреЗ/рдкреБрдирд░реНрдирд╡реАрдиреАрдХрд░рдг рдпреЛрдЧреНрдп рдХрдЪрд░реЗ рдЬреИрд╕реЗ рдХрд╛рдЧрдЬ, рдкреНрд▓рд╛рд╕реНрдЯрд┐рдХ, рдзрд╛рддреБ рдФрд░ рдХрд╛рдВрдЪ рдХреЗ рд▓рд┐рдП рдЙрдкрдпреЛрдЧ рдХрд┐рдП рдЬрд╛рддреЗ рд╣реИрдВред",
            bn: "ржирзАрж▓ ржмрж┐ржи рж╕рж╛ржзрж╛рж░ржгржд рж╢рзБржХржирзЛ/ржкрзБржирж░рзНржмрзНржпржмрж╣рж╛рж░ржпрзЛржЧрзНржп ржмрж░рзНржЬрзНржпрзЗрж░ ржЬржирзНржп ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝ ржпрзЗржоржи ржХрж╛ржЧржЬ, ржкрзНрж▓рж╛рж╕рзНржЯрж┐ржХ, ржзрж╛рждрзБ ржПржмржВ ржХрж╛ржЪред",
            ta: "роирпАро▓роорпН роиро┐ро▒ родрпКроЯрпНроЯро┐роХро│рпН рокрпКродрпБро╡ро╛роХ роХро╛роХро┐родроорпН, рокро┐ро│ро╛ро╕рпНроЯро┐роХрпН, роЙро▓рпЛроХроорпН рооро▒рпНро▒рпБроорпН роХрогрпНрогро╛роЯро┐ рокрпЛройрпНро▒ роЙро▓ро░рпН/рооро▒рпБроЪрпБро┤ро▒рпНроЪро┐ роХро┤ро┐ро╡рпБроХро│рпБроХрпНроХрпБрокрпН рокропройрпНрокроЯрпБродрпНродрокрпНрокроЯрпБроХро┐ройрпНро▒рой."
          }
        }
      ]
    },
    {
      id: 3,
      title: {
        en: "Safety Protocols & Equipment",
        hi: "рд╕реБрд░рдХреНрд╖рд╛ рдкреНрд░реЛрдЯреЛрдХреЙрд▓ рдФрд░ рдЙрдкрдХрд░рдг",
        bn: "рж╕рзБрж░ржХрзНрж╖рж╛ ржкрзНрж░рзЛржЯрзЛржХрж▓ ржПржмржВ рж╕рж░ржЮрзНржЬрж╛ржо",
        ta: "рокро╛родрпБроХро╛рокрпНрокрпБ роирпЖро▒ро┐роорпБро▒рпИроХро│рпН рооро▒рпНро▒рпБроорпН роЙрокроХро░рогроЩрпНроХро│рпН"
      },
      duration: "25 min",
      icon: 'ЁЯЫбя╕П',
      content: {
        en: {
          description: "Learn essential safety measures and proper usage of protective equipment during waste handling.",
          resources: [
            { type: 'video', title: 'Safety First: Protective Gear', duration: '8:30' },
            { type: 'text', title: 'Safety Guidelines Handbook' },
            { type: 'infographic', title: 'PPE Checklist' },
            { type: 'interactive', title: 'Safety Scenario Quiz' }
          ]
        },
        hi: {
          description: "рдЕрдкрд╢рд┐рд╖реНрдЯ рдкреНрд░рдмрдВрдзрди рдХреЗ рджреМрд░рд╛рди рдЖрд╡рд╢реНрдпрдХ рд╕реБрд░рдХреНрд╖рд╛ рдЙрдкрд╛рдпреЛрдВ рдФрд░ рд╕реБрд░рдХреНрд╖рд╛рддреНрдордХ рдЙрдкрдХрд░рдгреЛрдВ рдХреЗ рдЙрдЪрд┐рдд рдЙрдкрдпреЛрдЧ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдиреЗрдВред",
          resources: [
            { type: 'video', title: 'рд╕реБрд░рдХреНрд╖рд╛ рдкрд╣рд▓реЗ: рд╕реБрд░рдХреНрд╖рд╛рддреНрдордХ рдЧрд┐рдпрд░', duration: '8:30' },
            { type: 'text', title: 'рд╕реБрд░рдХреНрд╖рд╛ рджрд┐рд╢рд╛рдирд┐рд░реНрджреЗрд╢ рд╣реИрдВрдбрдмреБрдХ' },
            { type: 'infographic', title: 'рдкреАрдкреАрдИ рдЪреЗрдХрд▓рд┐рд╕реНрдЯ' },
            { type: 'interactive', title: 'рд╕реБрд░рдХреНрд╖рд╛ рдкрд░рд┐рджреГрд╢реНрдп рдХреНрд╡рд┐рдЬ' }
          ]
        },
        bn: {
          description: "ржмрж░рзНржЬрзНржп рж╣рзНржпрж╛ржирзНржбрж▓рж┐ржВ ржПрж░цЬЯщЧ┤ ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ рж╕рзБрж░ржХрзНрж╖рж╛ ржмрзНржпржмрж╕рзНржерж╛ ржПржмржВ рж╕рзБрж░ржХрзНрж╖рж╛ржорзВрж▓ржХ рж╕рж░ржЮрзНржЬрж╛ржорзЗрж░ рж╕ржарж┐ржХ ржмрзНржпржмрж╣рж╛рж░ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирзБржиред",
          resources: [
            { type: 'video', title: 'рж╕рзБрж░ржХрзНрж╖рж╛ ржкрзНрж░ржержо: ржкрзНрж░рждрж┐рж░ржХрзНрж╖рж╛ржорзВрж▓ржХ ржЧрж┐ржпрж╝рж╛рж░', duration: '8:30' },
            { type: 'text', title: 'рж╕рзБрж░ржХрзНрж╖рж╛ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛ рж╣рзНржпрж╛ржирзНржбржмрзБржХ' },
            { type: 'infographic', title: 'ржкрж┐ржкрж┐ржЗ ржЪрзЗржХрж▓рж┐рж╕рзНржЯ' },
            { type: 'interactive', title: 'рж╕рзБрж░ржХрзНрж╖рж╛ ржкрж░рж┐рж╕рзНржерж┐рждрж┐ ржХрзБржЗржЬ' }
          ]
        },
        ta: {
          description: "роХро┤ро┐ро╡рпБ роХрпИропро╛ро│рпБродро▓ро┐ройрпН рокрпЛродрпБ роЕродрпНродро┐ропро╛ро╡роЪро┐роп рокро╛родрпБроХро╛рокрпНрокрпБ роироЯро╡роЯро┐роХрпНроХрпИроХро│рпН рооро▒рпНро▒рпБроорпН рокро╛родрпБроХро╛рокрпНрокрпБ роЙрокроХро░рогроЩрпНроХро│ро┐ройрпН роЪро░ро┐ропро╛рой рокропройрпНрокро╛роЯрпБ рокро▒рпНро▒ро┐ роЕро▒ро┐роХ.",
          resources: [
            { type: 'video', title: 'рокро╛родрпБроХро╛рокрпНрокрпБ роорпБродро▓ро┐ро▓рпН: рокро╛родрпБроХро╛рокрпНрокрпБ роХро┐ропро░рпН', duration: '8:30' },
            { type: 'text', title: 'рокро╛родрпБроХро╛рокрпНрокрпБ ро╡ро┤ро┐роХро╛роЯрпНроЯро┐роХро│рпН роХрпИропрпЗроЯрпБ' },
            { type: 'infographic', title: 'PPE роЪро░ро┐рокро╛ро░рпНрокрпНрокрпБрокрпН рокроЯрпНроЯро┐ропро▓рпН' },
            { type: 'interactive', title: 'рокро╛родрпБроХро╛рокрпНрокрпБ роЪрпВро┤рпНроиро┐ро▓рпИ ро╡ро┐ройро╛роЯро┐ ро╡ро┐ройро╛' }
          ]
        }
      },
      quiz: [
        {
          question: {
            en: "Which of these is NOT a recommended safety equipment for waste workers?",
            hi: "рдЗрдирдореЗрдВ рд╕реЗ рдХреМрди рд╕рд╛ рдЕрдкрд╢рд┐рд╖реНрдЯ рдХрд░реНрдорд┐рдпреЛрдВ рдХреЗ рд▓рд┐рдП рдЕрдиреБрд╢рдВрд╕рд┐рдд рд╕реБрд░рдХреНрд╖рд╛ рдЙрдкрдХрд░рдг рдирд╣реАрдВ рд╣реИ?",
            bn: "ржирж┐ржорзНржирж▓рж┐ржЦрж┐рждржЧрзБрж▓рж┐рж░ ржоржзрзНржпрзЗхУкф╕Аф╕к ржмрж░рзНржЬрзНржп ржХрж░рзНржорзАржжрзЗрж░ ржЬржирзНржп ржкрзНрж░рж╕рзНрждрж╛ржмрж┐ржд рж╕рзБрж░ржХрзНрж╖рж╛ рж╕рж░ржЮрзНржЬрж╛ржо ржиржпрж╝?",
            ta: "роЗро╡ро▒рпНро▒ро┐ро▓рпН роОродрпБ роХро┤ро┐ро╡рпБ родрпКро┤ро┐ро▓ро╛ро│ро░рпНроХро│рпБроХрпНроХрпБ рокро░ро┐роирпНродрпБро░рпИроХрпНроХрокрпНрокроЯрпБроорпН рокро╛родрпБроХро╛рокрпНрокрпБ роЙрокроХро░рогроорпН роЕро▓рпНро▓?"
          },
          options: [
            { id: 1, text: { en: "Safety goggles", hi: "рд╕реБрд░рдХреНрд╖рд╛ рдЪрд╢реНрдорд╛", bn: "рж╕рзБрж░ржХрзНрж╖рж╛ ржЪрж╢ржорж╛", ta: "рокро╛родрпБроХро╛рокрпНрокрпБ роХрогрпНрогро╛роЯро┐роХро│рпН" } },
            { id: 2, text: { en: "Open-toed sandals", hi: "рдЦреБрд▓реЗ рдкрдВрдЬреЗ рдХреА рд╕реИрдВрдбрд▓", bn: "ржЦрзЛрж▓рж╛ ржкрж╛ржпрж╝рзЗрж░ рж╕рзНржпрж╛ржирзНржбрзЗрж▓", ta: "родро┐ро▒роирпНрод ро╡ро┐ро░ро▓рпН роЪрпЖро░рпБрокрпНрокрпБроХро│рпН" } },
            { id: 3, text: { en: "Heavy-duty gloves", hi: "рднрд╛рд░реА-рд╢реБрд▓реНрдХ рджрд╕реНрддрд╛рдиреЗ", bn: "рж╣рзЗржнрж┐-ржбрж┐ржЙржЯрж┐ ржЧрзНрж▓рж╛ржнрж╕", ta: "роХройро░роХ роХрпИропрпБро▒рпИроХро│рпН" } },
            { id: 4, text: { en: "Reflective vest", hi: "рдЪрд┐рдВрддрдирд╢реАрд▓ рдмрдирд┐рдпрд╛рди", bn: "рж░рж┐ржлрзНрж▓рзЗржХрзНржЯрж┐ржн ржнрзЗрж╕рзНржЯ", ta: "рокро┐ро░родро┐рокро▓ро┐рокрпНрокрпБ рооро╛ро░рпНрокрпБроЪрпНроЪроЯрпНроЯрпИ" } }
          ],
          correctAnswer: 2,
          explanation: {
            en: "Open-toed sandals provide no protection against sharp objects, chemicals, or heavy items that might fall on feet.",
            hi: "рдЦреБрд▓реЗ рдкрдВрдЬреЗ рдХреА рд╕реИрдВрдбрд▓ рддреЗрдЬ рд╡рд╕реНрддреБрдУрдВ, рд░рд╕рд╛рдпрдиреЛрдВ рдпрд╛ рдкреИрд░реЛрдВ рдкрд░ рдЧрд┐рд░рдиреЗ рд╡рд╛рд▓реА рднрд╛рд░реА рд╡рд╕реНрддреБрдУрдВ рд╕реЗ рдХреЛрдИ рд╕реБрд░рдХреНрд╖рд╛ рдкреНрд░рджрд╛рди рдирд╣реАрдВ рдХрд░рддреА рд╣реИрдВред",
            bn: "ржЦрзЛрж▓рж╛ ржкрж╛ржпрж╝рзЗрж░ рж╕рзНржпрж╛ржирзНржбрзЗрж▓ рждрзАржХрзНрж╖рзНржг ржмрж╕рзНрждрзБ, рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржмрж╛ ржкрж╛ржпрж╝рзЗ ржкржбрж╝рждрзЗ ржкрж╛рж░рзЗ ржПржоржи ржнрж╛рж░рзА ржЬрж┐ржирж┐рж╕ ржерзЗржХрзЗф╗╗ф╜Х рж╕рзБрж░ржХрзНрж╖рж╛цПРф╛Ы ржХрж░рзЗ ржирж╛ред",
            ta: "родро┐ро▒роирпНрод ро╡ро┐ро░ро▓рпН роЪрпЖро░рпБрокрпНрокрпБроХро│рпН роХрпВро░рпНроорпИропро╛рой рокрпКро░рпБро│рпНроХро│рпН, роЗро░роЪро╛ропройроЩрпНроХро│рпН роЕро▓рпНро▓родрпБ роХро╛ро▓рпНроХро│ро┐ро▓рпН ро╡ро┐ро┤роХрпНроХрпВроЯро┐роп роХройро░роХ рокрпКро░рпБроЯрпНроХро│ро┐ро▓ро┐ро░рпБроирпНродрпБ роОроирпНродрокрпН рокро╛родрпБроХро╛рокрпНрокрпИропрпБроорпН ро╡ро┤роЩрпНроХро╛родрпБ."
          }
        }
      ]
    },
    {
      id: 4,
      title: {
        en: "Collection & Transportation",
        hi: "рд╕рдВрдЧреНрд░рд╣ рдФрд░ рдкрд░рд┐рд╡рд╣рди",
        bn: "рж╕ржВржЧрзНрж░рж╣ ржПржмржВ ржкрж░рж┐ржмрж╣ржи",
        ta: "роЪрпЗроХро░ро┐рокрпНрокрпБ рооро▒рпНро▒рпБроорпН рокрпЛроХрпНроХрпБро╡ро░родрпНродрпБ"
      },
      duration: "18 min",
      icon: 'ЁЯЪЫ',
      content: {
        en: {
          description: "Learn efficient collection methods and safe transportation practices for different types of waste.",
          resources: [
            { type: 'video', title: 'Collection Best Practices', duration: '6:15' },
            { type: 'text', title: 'Transportation Guidelines' },
            { type: 'infographic', title: 'Route Optimization' },
            { type: 'interactive', title: 'Vehicle Safety Check' }
          ]
        },
        hi: {
          description: "рд╡рд┐рднрд┐рдиреНрди рдкреНрд░рдХрд╛рд░ рдХреЗ рдХрдЪрд░реЗ рдХреЗ рд▓рд┐рдП рдХреБрд╢рд▓ рд╕рдВрдЧреНрд░рд╣ рд╡рд┐рдзрд┐рдпреЛрдВ рдФрд░ рд╕реБрд░рдХреНрд╖рд┐рдд рдкрд░рд┐рд╡рд╣рди рдкреНрд░рдерд╛рдУрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдиреЗрдВред",
          resources: [
            { type: 'video', title: 'рд╕рдВрдЧреНрд░рд╣ рд╕рд░реНрд╡реЛрддреНрддрдо рдкреНрд░рдерд╛рдПрдБ', duration: '6:15' },
            { type: 'text', title: 'рдкрд░рд┐рд╡рд╣рди рджрд┐рд╢рд╛рдирд┐рд░реНрджреЗрд╢' },
            { type: 'infographic', title: 'рдорд╛рд░реНрдЧ рдЕрдиреБрдХреВрд▓рди' },
            { type: 'interactive', title: 'рд╡рд╛рд╣рди рд╕реБрд░рдХреНрд╖рд╛ рдЬрд╛рдВрдЪ' }
          ]
        },
        bn: {
          description: "ржмрж┐ржнрж┐ржирзНржи ржзрж░ржирзЗрж░ ржмрж░рзНржЬрзНржпрзЗрж░ ржЬржирзНржп ржжржХрзНрж╖ рж╕ржВржЧрзНрж░рж╣ ржкржжрзНржзрждрж┐ ржПржмржВ ржирж┐рж░рж╛ржкржж ржкрж░рж┐ржмрж╣ржи ржЕржирзБрж╢рзАрж▓ржи рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирзБржиред",
          resources: [
            { type: 'video', title: 'рж╕ржВржЧрзНрж░рж╣рзЗрж░ рж╕рзЗрж░рж╛ ржЕржирзБрж╢рзАрж▓ржи', duration: '6:15' },
            { type: 'text', title: 'ржкрж░рж┐ржмрж╣ржи ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛' },
            { type: 'infographic', title: 'рж░рзБржЯ ржЕржкрзНржЯрж┐ржорж╛ржЗржЬрзЗрж╢ржи' },
            { type: 'interactive', title: 'ржЧрж╛ржбрж╝рж┐рж░ ржирж┐рж░рж╛ржкрждрзНрждрж╛ ржкрж░рзАржХрзНрж╖рж╛' }
          ]
        },
        ta: {
          description: "рокро▓рпНро╡рпЗро▒рпБ ро╡роХрпИропро╛рой роХро┤ро┐ро╡рпБроХро│рпБроХрпНроХро╛рой родро┐ро▒роорпИропро╛рой роЪрпЗроХро░ро┐рокрпНрокрпБ роорпБро▒рпИроХро│рпН рооро▒рпНро▒рпБроорпН рокро╛родрпБроХро╛рокрпНрокро╛рой рокрпЛроХрпНроХрпБро╡ро░родрпНродрпБ роироЯрпИроорпБро▒рпИроХро│рпИроХрпН роХро▒рпНро▒рпБроХрпНроХрпКро│рпНро│рпБроЩрпНроХро│рпН.",
          resources: [
            { type: 'video', title: 'роЪрпЗроХро░ро┐рокрпНрокрпБ роЪро┐ро▒роирпНрод роироЯрпИроорпБро▒рпИроХро│рпН', duration: '6:15' },
            { type: 'text', title: 'рокрпЛроХрпНроХрпБро╡ро░родрпНродрпБ ро╡ро┤ро┐роХро╛роЯрпНроЯро┐роХро│рпН' },
            { type: 'infographic', title: 'ро╡ро┤ро┐ родрпЗро░рпНро╡рпБроорпБро▒рпИ' },
            { type: 'interactive', title: 'ро╡ро╛роХрой рокро╛родрпБроХро╛рокрпНрокрпБ роЪрпЛродройрпИ' }
          ]
        }
      },
      quiz: [
        {
          question: {
            en: "What is the maximum recommended capacity for waste collection vehicles?",
            hi: "рдХрдЪрд░рд╛ рд╕рдВрдЧреНрд░рд╣ рд╡рд╛рд╣рдиреЛрдВ рдХреЗ рд▓рд┐рдП рдЕрдзрд┐рдХрддрдо рдЕрдиреБрд╢рдВрд╕рд┐рдд рдХреНрд╖рдорддрд╛ рдХреНрдпрд╛ рд╣реИ?",
            bn: "ржмрж░рзНржЬрзНржп рж╕ржВржЧрзНрж░рж╣ ржпрж╛ржиржмрж╛рж╣ржирзЗрж░ ржЬржирзНржп рж╕рж░рзНржмрзЛржЪрзНржЪ ржкрзНрж░рж╕рзНрждрж╛ржмрж┐ржд ржХрзНрж╖ржорждрж╛цШпф╗Аф╣И?",
            ta: "роХро┤ро┐ро╡рпБ роЪрпЗроХро░ро┐рокрпНрокрпБ ро╡ро╛роХройроЩрпНроХро│рпБроХрпНроХрпБ роЕродро┐роХрокроЯрпНроЪ рокро░ро┐роирпНродрпБро░рпИроХрпНроХрокрпНрокроЯрпНроЯ родро┐ро▒ройрпН роОройрпНрой?"
          },
          options: [
            { id: 1, text: { en: "60%", hi: "60%", bn: "60%", ta: "60%" } },
            { id: 2, text: { en: "75%", hi: "75%", bn: "75%", ta: "75%" } },
            { id: 3, text: { en: "85%", hi: "85%", bn: "85%", ta: "85%" } },
            { id: 4, text: { en: "95%", hi: "95%", bn: "95%", ta: "95%" } }
          ],
          correctAnswer: 3,
          explanation: {
            en: "Vehicles should not be loaded beyond 85% capacity to ensure safe transportation and prevent spillage.",
            hi: "рд╕реБрд░рдХреНрд╖рд┐рдд рдкрд░рд┐рд╡рд╣рди рдФрд░ рд░рд┐рд╕рд╛рд╡ рдХреЛ рд░реЛрдХрдиреЗ рдХреЗ рд▓рд┐рдП рд╡рд╛рд╣рдиреЛрдВ рдХреЛ 85% рдХреНрд╖рдорддрд╛ рд╕реЗ рдЕрдзрд┐рдХ рдирд╣реАрдВ рд▓реЛрдб рдХрд┐рдпрд╛ рдЬрд╛рдирд╛ рдЪрд╛рд╣рд┐рдПред",
            bn: "ржирж┐рж░рж╛ржкржж ржкрж░рж┐ржмрж╣ржи ржПржмржВ ржЫржбрж╝рж┐ржпрж╝рзЗ ржкржбрж╝рж╛ рж░рзЛржз ржХрж░рждрзЗ ржпрж╛ржиржмрж╛рж╣ржиржЧрзБрж▓рж┐ 85% ржХрзНрж╖ржорждрж╛рж░ ржмрзЗрж╢рж┐ рж▓рзЛржб ржХрж░рж╛ ржЙржЪрж┐ржд ржиржпрж╝ред",
            ta: "рокро╛родрпБроХро╛рокрпНрокро╛рой рокрпЛроХрпНроХрпБро╡ро░родрпНродрпБ рооро▒рпНро▒рпБроорпН роХроЪро┐ро╡рпИродрпН родроЯрпБроХрпНроХ ро╡ро╛роХройроЩрпНроХро│рпН 85% родро┐ро▒ройрпБроХрпНроХрпБ роорпЗро▓рпН роПро▒рпНро▒роХрпНроХрпВроЯро╛родрпБ."
          }
        }
      ]
    },
    {
      id: 5,
      title: {
        en: "Processing & Treatment",
        hi: "рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг рдФрд░ рдЙрдкрдЪрд╛рд░",
        bn: "ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ржХрж░ржг ржПржмржВ ржЪрж┐ржХрж┐рждрзНрж╕рж╛",
        ta: "роЪрпЖропро▓ро╛роХрпНроХроорпН рооро▒рпНро▒рпБроорпН роЪро┐роХро┐роЪрпНроЪрпИ"
      },
      duration: "22 min",
      icon: 'тЪЩя╕П',
      content: {
        en: {
          description: "Understand various waste processing techniques and treatment methods for different waste types.",
          resources: [
            { type: 'video', title: 'Composting Techniques', duration: '8:45' },
            { type: 'text', title: 'Waste-to-Energy Processes' },
            { type: 'infographic', title: 'Treatment Flowchart' },
            { type: 'interactive', title: 'Virtual Plant Tour' }
          ]
        },
        hi: {
          description: "рд╡рд┐рднрд┐рдиреНрди рдкреНрд░рдХрд╛рд░ рдХреЗ рдХрдЪрд░реЗ рдХреЗ рд▓рд┐рдП рд╡рд┐рднрд┐рдиреНрди рдХрдЪрд░рд╛ рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг рддрдХрдиреАрдХреЛрдВ рдФрд░ рдЙрдкрдЪрд╛рд░ рд╡рд┐рдзрд┐рдпреЛрдВ рдХреЛ рд╕рдордЭреЗрдВред",
          resources: [
            { type: 'video', title: 'рдХрдореНрдкреЛрд╕реНрдЯрд┐рдВрдЧ рддрдХрдиреАрдХ', duration: '8:45' },
            { type: 'text', title: 'рдЕрдкрд╢рд┐рд╖реНрдЯ-рд╕реЗ-рдКрд░реНрдЬрд╛ рдкреНрд░рдХреНрд░рд┐рдпрд╛рдПрдВ' },
            { type: 'infographic', title: 'рдЙрдкрдЪрд╛рд░ рдлреНрд▓реЛрдЪрд╛рд░реНрдЯ' },
            { type: 'interactive', title: 'рдЖрднрд╛рд╕реА рд╕рдВрдпрдВрддреНрд░ рднреНрд░рдордг' }
          ]
        },
        bn: {
          description: "ржмрж┐ржнрж┐ржирзНржи ржзрж░ржирзЗрж░ ржмрж░рзНржЬрзНржпрзЗрж░ ржЬржирзНржп ржмрж┐ржнрж┐ржирзНржи ржмрж░рзНржЬрзНржп ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ржХрж░ржг ржХрзМрж╢рж▓ ржПржмржВ ржЪрж┐ржХрж┐рждрзНрж╕рж╛ ржкржжрзНржзрждрж┐ ржмрзБржЭрзБржиред",
          resources: [
            { type: 'video', title: 'ржХржорзНржкрзЛрж╕рзНржЯрж┐ржВ ржХрзМрж╢рж▓', duration: '8:45' },
            { type: 'text', title: 'ржмрж░рзНржЬрзНржп-ржерзЗржХрзЗ-рж╢ржХрзНрждрж┐ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛' },
            { type: 'infographic', title: 'ржЪрж┐ржХрж┐рждрзНрж╕рж╛ ржлрзНрж▓рзЛржЪрж╛рж░рзНржЯ' },
            { type: 'interactive', title: 'ржнрж╛рж░рзНржЪрзБржпрж╝рж╛рж▓ ржкрзНрж▓рзНржпрж╛ржирзНржЯ ржЯрзНржпрзБрж░' }
          ]
        },
        ta: {
          description: "рокро▓рпНро╡рпЗро▒рпБ ро╡роХрпИропро╛рой роХро┤ро┐ро╡рпБроХро│рпБроХрпНроХро╛рой рокро▓рпНро╡рпЗро▒рпБ роХро┤ро┐ро╡рпБ роЪрпЖропро▓ро╛роХрпНроХ роирпБроЯрпНрокроЩрпНроХро│рпН рооро▒рпНро▒рпБроорпН роЪро┐роХро┐роЪрпНроЪрпИ роорпБро▒рпИроХро│рпИрокрпН рокрпБро░ро┐роирпНродрпБ роХрпКро│рпНро│рпБроЩрпНроХро│рпН.",
          resources: [
            { type: 'video', title: 'роХрпВроЯрпНроЯрпБ ро╡рпИроХрпНроХрпБроорпН роирпБроЯрпНрокроЩрпНроХро│рпН', duration: '8:45' },
            { type: 'text', title: 'роХро┤ро┐ро╡рпБ-роорпБродро▓рпН-роЖро▒рпНро▒ро▓рпН роЪрпЖропро▓рпНроорпБро▒рпИроХро│рпН' },
            { type: 'infographic', title: 'роЪро┐роХро┐роЪрпНроЪрпИ рокро╛ропрпНро╡рпБ ро╡ро┐ро│роХрпНроХрокрпНрокроЯроорпН' },
            { type: 'interactive', title: 'роорпЖропрпНроиро┐роХро░рпН роЖро▓рпИ роЪрпБро▒рпНро▒рпБрокрпНрокропрогроорпН' }
          ]
        }
      },
      quiz: [
          {
"question": {
"en": "Which method is most suitable for organic waste treatment?",
"hi": "рдЬреИрд╡рд┐рдХ рдХрдЪрд░реЗ рдХреЗ рдЙрдкрдЪрд╛рд░ рдХреЗ рд▓рд┐рдП рдХреМрди рд╕реА рд╡рд┐рдзрд┐ рд╕рдмрд╕реЗ рдЙрдкрдпреБрдХреНрдд рд╣реИ?",
"bn": "ржЬрзИржм ржмрж░рзНржЬрзНржп ржЪрж┐ржХрж┐рждрзНрж╕рж╛рж░ ржЬржирзНржпхУкф╕АчзН ржкржжрзНржзрждрж┐ рж╕ржмржЪрзЗржпрж╝рзЗ ржЙржкржпрзБржХрзНржд?",
"ta": "роХро░ро┐роо роХро┤ро┐ро╡рпБ роЪро┐роХро┐роЪрпНроЪрпИроХрпНроХрпБ роОхУкф╕АчзН роорпБро▒рпИ рооро┐роХро╡рпБроорпН рокрпКро░рпБродрпНродрооро╛ройродрпБ?"
},
"options": [
{ "id": 1, "text": { "en": "Incineration", "hi": "рднрд╕реНрдореАрдХрд░рдг", "bn": "ржкрзЛржбрж╝рж╛ржирзЛ", "ta": "роОро░ро┐родрпНродро▓рпН" } },
{ "id": 2, "text": { "en": "Landfilling", "hi": "рд▓реИрдВрдбрдлрд┐рд▓рд┐рдВрдЧ", "bn": "рж▓рзНржпрж╛ржирзНржбржлрж┐рж▓рж┐ржВ", "ta": "роиро┐ро░рокрпНрокрпБродро▓рпН" } },
{ "id": 3, "text": { "en": "Composting", "hi": "рдХрдореНрдкреЛрд╕реНрдЯрд┐рдВрдЧ", "bn": "ржХржорзНржкрзЛрж╕рзНржЯрж┐ржВ", "ta": "роХрпВроЯрпНроЯрпБ ро╡рпИродрпНродро▓рпН" } },
{ "id": 4, "text": { "en": "Recycling", "hi": "рд░реАрд╕рд╛рдЗрдХреНрд▓рд┐рдВрдЧ", "bn": "рж░рж┐рж╕рж╛ржЗржХрзНрж▓рж┐ржВ", "ta": "рооро▒рпБроЪрпБро┤ро▒рпНроЪро┐" } }
],
"correctAnswer": 3,
"explanation": {
"en": "Composting is the most suitable method for organic waste as it converts waste into nutrient-rich compost for agriculture.",
"hi": "рдХрдореНрдкреЛрд╕реНрдЯрд┐рдВрдЧ рдЬреИрд╡рд┐рдХ рдХрдЪрд░реЗ рдХреЗ рд▓рд┐рдП рд╕рдмрд╕реЗ рдЙрдкрдпреБрдХреНрдд рд╡рд┐рдзрд┐ рд╣реИ рдХреНрдпреЛрдВрдХрд┐ рдпрд╣ рдХрдЪрд░реЗ рдХреЛ рдХреГрд╖рд┐ рдХреЗ рд▓рд┐рдП рдкреЛрд╖рдХ рддрддреНрд╡реЛрдВ рд╕реЗ рднрд░рдкреВрд░ рдЦрд╛рдж рдореЗрдВ рдкрд░рд┐рд╡рд░реНрддрд┐рдд рдХрд░рддреА рд╣реИред",
"bn": "ржХржорзНржкрзЛрж╕рзНржЯрж┐ржВ ржЬрзИржм ржмрж░рзНржЬрзНржпрзЗрж░ ржЬржирзНржп рж╕ржмржЪрзЗржпрж╝рзЗ ржЙржкржпрзБржХрзНржд ржкржжрзНржзрждрж┐ ржХрж╛рж░ржг ржПржЯрж┐ ржмрж░рзНржЬрзНржпржХрзЗ ржХрзГрж╖рж┐рж░ ржЬржирзНржп ржкрзБрж╖рзНржЯрж┐-рж╕ржорзГржжрзНржз ржХржорзНржкрзЛрж╕рзНржЯрзЗ рж░рзВржкрж╛ржирзНрждрж░рж┐ржд ржХрж░рзЗред",
"ta": "роХро░ро┐роо роХро┤ро┐ро╡рпБроХро│рпБроХрпНроХрпБ роХрпВроЯрпНроЯрпБ ро╡рпИродрпНродро▓рпН рооро┐роХро╡рпБроорпН рокрпКро░рпБродрпНродрооро╛рой роорпБро▒рпИропро╛роХрпБроорпН, роПройрпЖройро┐ро▓рпН роЗродрпБ роХро┤ро┐ро╡рпБроХро│рпИ ро╡ро┐ро╡роЪро╛ропродрпНродро┐ро▒рпНроХро╛рой роКроЯрпНроЯроЪрпНроЪродрпНродрпБ роиро┐ро▒рпИроирпНрод роЙро░рооро╛роХ рооро╛ро▒рпНро▒рпБроХро┐ро▒родрпБ."
}
}
]
},
{
"id": 6,
"title": {
"en": "Community Engagement & Communication",
"hi": "рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рдЬреБрдбрд╝рд╛рд╡ рдФрд░ рд╕рдВрдЪрд╛рд░",
"bn": "рж╕ржорзНржкрзНрж░ржжрж╛ржпрж╝ рж╕ржорзНржкрзГржХрзНрждрждрж╛ ржПржмржВ ржпрзЛржЧрж╛ржпрзЛржЧ",
"ta": "роЪроорпВроХ роИроЯрпБрокро╛роЯрпБ рооро▒рпНро▒рпБроорпН родроХро╡ро▓рпНродрпКроЯро░рпНрокрпБ"
},
"duration": "20 min",
"icon": 'ЁЯЧгя╕П',
"content": {
"en": {
"description": "Develop skills to effectively communicate with residents and promote community participation in waste management.",
"resources": [
{ "type": "video", "title": "Effective Communication Strategies", "duration": "9:10" },
{ "type": "text", "title": "Overcoming Common Objections" },
{ "type": "infographic", "title": "Do's and Don'ts of Engagement" },
{ "type": "interactive", "title": "Role-Playing Scenarios" }
]
},
"hi": {
"description": "рдирд┐рд╡рд╛рд╕рд┐рдпреЛрдВ рдХреЗ рд╕рд╛рде рдкреНрд░рднрд╛рд╡реА рдврдВрдЧ рд╕реЗ рд╕рдВрд╡рд╛рдж рдХрд░рдиреЗ рдФрд░ рдЕрдкрд╢рд┐рд╖реНрдЯ рдкреНрд░рдмрдВрдзрди рдореЗрдВ рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рднрд╛рдЧреАрджрд╛рд░реА рдХреЛ рдмрдврд╝рд╛рд╡рд╛ рджреЗрдиреЗ рдХреЗ рд▓рд┐рдП рдХреМрд╢рд▓ рд╡рд┐рдХрд╕рд┐рдд рдХрд░реЗрдВред",
"resources": [
{ "type": "video", "title": "рдкреНрд░рднрд╛рд╡реА рд╕рдВрдЪрд╛рд░ рд░рдгрдиреАрддрд┐рдпрд╛рдБ", "duration": "9:10" },
{ "type": "text", "title": "рдЖрдо рдЖрдкрддреНрддрд┐рдпреЛрдВ рдкрд░ рдХрд╛рдмреВ рдкрд╛рдирд╛" },
{ "type": "infographic", "title": "рдЬреБрдбрд╝рд╛рд╡ рдХреЗ do's and don'ts" },
{ "type": "interactive", "title": "рд░реЛрд▓-рдкреНрд▓реЗрдЗрдВрдЧ рдкрд░рд┐рджреГрд╢реНрдп" }
]
},
"bn": {
"description": "ржмрж╛рж╕рж┐ржирзНржжрж╛ржжрзЗрж░ рж╕рж╛ржерзЗ ржХрж╛рж░рзНржпржХрж░ржнрж╛ржмрзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рждрзЗ ржПржмржВ ржмрж░рзНржЬрзНржп ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛ржпрж╝ рж╕ржорзНржкрзНрж░ржжрж╛ржпрж╝рзЗрж░ ржЕржВрж╢ржЧрзНрж░рж╣ржгржХрзЗ ржЙрзОрж╕рж╛рж╣рж┐ржд ржХрж░рждрзЗ ржжржХрзНрж╖рждрж╛ ржЙржирзНржиржд ржХрж░рзБржиред",
"resources": [
{ "type": "video", "title": "ржХрж╛рж░рзНржпржХрж░ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрзМрж╢рж▓", "duration": "9:10" },
{ "type": "text", "title": "рж╕рж╛ржзрж╛рж░ржг ржЖржкрждрзНрждрж┐ ржХрж╛ржЯрж┐ржпрж╝рзЗ ржУржарж╛" },
{ "type": "infographic", "title": "ржЬржбрж╝рж┐ржд рж╣ржУржпрж╝рж╛рж░ do's and don'ts" },
{ "type": "interactive", "title": "ржнрзВржорж┐ржХрж╛ ржЕржнрж┐ржиржпрж╝ ржкрж░рж┐рж╕рзНржерж┐рждрж┐" }
]
},
"ta": {
"description": "роХрпБроЯро┐ропро┐ро░рпБрокрпНрокро╛ро│ро░рпНроХро│рпБроЯройрпН родро┐ро▒роорпНрокроЯ родрпКроЯро░рпНрокрпБроХрпКро│рпНро│рпБроорпН рооро▒рпНро▒рпБроорпН роХро┤ро┐ро╡рпБ роорпЗро▓ро╛рогрпНроорпИропро┐ро▓рпН роЪроорпВроХ рокроЩрпНроХрпЗро▒рпНрокрпИ роКроХрпНроХрпБро╡ро┐роХрпНроХрпБроорпН родро┐ро▒ройрпНроХро│рпИ ро╡ро│ро░рпНродрпНродрпБроХрпН роХрпКро│рпНро│рпБроЩрпНроХро│рпН.",
"resources": [
{ "type": "video", "title": "родро┐ро▒ройро╛рой родроХро╡ро▓рпНродрпКроЯро░рпНрокрпБ роЙродрпНродро┐роХро│рпН", "duration": "9:10" },
{ "type": "text", "title": "рокрпКродрпБро╡ро╛рой роЖроЯрпНроЪрпЗрокройрпИроХро│рпИ роЪрооро╛ро│ро┐родрпНродро▓рпН" },
{ "type": "infographic", "title": "роИроЯрпБрокро╛роЯрпНроЯро┐ройрпН роЪрпЖропрпНроп ро╡рпЗрогрпНроЯро┐ропро╡рпИ рооро▒рпНро▒рпБроорпН роЪрпЖропрпНропроХрпН роХрпВроЯро╛родро╡рпИ" },
{ "type": "interactive", "title": "рокро╛родрпНродро┐ро░родрпНродро┐ро▓рпН роироЯро┐рокрпНрокрпБ роХро╛роЯрпНроЪро┐роХро│рпН" }
]
}
},
"quiz": [
{
"question": {
"en": "What is the most effective way to address residents' concerns about waste collection?",
"hi": "рдХрдЪрд░рд╛ рд╕рдВрдЧреНрд░рд╣ рдХреЛ рд▓реЗрдХрд░ рдирд┐рд╡рд╛рд╕рд┐рдпреЛрдВ рдХреА рдЪрд┐рдВрддрд╛рдУрдВ рдХреЛ рджреВрд░ рдХрд░рдиреЗ рдХрд╛ рд╕рдмрд╕реЗ рдкреНрд░рднрд╛рд╡реА рддрд░реАрдХрд╛ рдХреНрдпрд╛ рд╣реИ?",
"bn": "ржмрж░рзНржЬрзНржп рж╕ржВржЧрзНрж░рж╣ ржирж┐ржпрж╝рзЗ ржмрж╛рж╕рж┐ржирзНржжрж╛ржжрзЗрж░ ржЙржжрзНржмрзЗржЧ ржорзЛржХрж╛ржмрзЗрж▓рж╛ ржХрж░рж╛рж░ рж╕ржмржЪрзЗржпрж╝рзЗ ржХрж╛рж░рзНржпржХрж░ ржЙржкрж╛ржпрж╝цШпф╗Аф╣И?",
"ta": "роХро┤ро┐ро╡рпБ роЪрпЗроХро░ро┐рокрпНрокрпБ роХрпБро▒ро┐родрпНрод роХрпБроЯро┐ропро┐ро░рпБрокрпНрокро╛ро│ро░рпНроХро│ро┐ройрпН роХро╡ро▓рпИроХро│рпИ роЪрооро╛ро│ро┐роХрпНроХ рооро┐роХро╡рпБроорпН рокропройрпБро│рпНро│ роорпБро▒рпИ роОродрпБ?"
},
"options": [
{ "id": 1, "text": { "en": "Ignore them", "hi": "рдЙрдиреНрд╣реЗрдВ рдирдЬрд░рдЕрдВрджрд╛рдЬ рдХрд░реЗрдВ", "bn": "рждрж╛ржжрзЗрж░ ржЙржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржи", "ta": "роЕро╡ро▒рпНро▒рпИ рокрпБро▒роХрпНроХрогро┐роХрпНроХро╡рпБроорпН" } },
{ "id": 2, "text": { "en": "Active listening and empathy", "hi": "рд╕рдХреНрд░рд┐рдп рд╕реБрдирдирд╛ рдФрд░ рд╕рд╣рд╛рдиреБрднреВрддрд┐", "bn": "рж╕ржХрзНрж░рж┐ржпрж╝ рж╢рзЛржирж╛ ржПржмржВ рж╕рж╣рж╛ржирзБржнрзВрждрж┐", "ta": "роЪрпЖропро▓ро┐ро▓рпН роХрпЗроЯрпНроЯро▓рпН рооро▒рпНро▒рпБроорпН рокроЪрпНроЪро╛родрпНродро╛рокроорпН" } },
{ "id": 3, "text": { "en": "Impose fines immediately", "hi": "рддреБрд░рдВрдд рдЬреБрд░реНрдорд╛рдирд╛ рд▓рдЧрд╛рдПрдВ", "bn": "ржЕржмрж┐рж▓ржорзНржмрзЗ ржЬрж░рж┐ржорж╛ржирж╛ ржЖрж░рзЛржк ржХрж░рзБржи", "ta": "роЙроЯройроЯро┐ропро╛роХ роЕрокро░ро╛родроорпН ро╡ро┐родро┐роХрпНроХро╡рпБроорпН" } },
{ "id": 4, "text": { "en": "Avoid contact", "hi": "рд╕рдВрдкрд░реНрдХ рд╕реЗ рдмрдЪреЗрдВ", "bn": "ржпрзЛржЧрж╛ржпрзЛржЧ ржПржбрж╝рж┐ржпрж╝рзЗ ржЪрж▓рзБржи", "ta": "родрпКроЯро░рпНрокрпБ родро╡ро┐ро░рпНроХрпНроХро╡рпБроорпН" } }
],
"correctAnswer": 2,
"explanation": {
"en": "Active listening and showing empathy helps build trust, understand the root cause of concerns, and find mutually acceptable solutions.",
"hi": "рд╕рдХреНрд░рд┐рдп рд░реВрдк рд╕реЗ рд╕реБрдирдирд╛ рдФрд░ рд╕рд╣рд╛рдиреБрднреВрддрд┐ рджрд┐рдЦрд╛рдирд╛ рд╡рд┐рд╢реНрд╡рд╛рд╕ рдмрдирд╛рдиреЗ, рдЪрд┐рдВрддрд╛рдУрдВ рдХреЗ рдореВрд▓ рдХрд╛рд░рдг рдХреЛ рд╕рдордЭрдиреЗ рдФрд░ рдкрд░рд╕реНрдкрд░ рд╕реНрд╡реАрдХрд╛рд░реНрдп рд╕рдорд╛рдзрд╛рди рдЦреЛрдЬрдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИред",
"bn": "рж╕ржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ рж╢рзЛржирж╛ ржПржмржВ рж╕рж╣рж╛ржирзБржнрзВрждрж┐ ржжрзЗржЦрж╛ржирзЛ ржмрж┐рж╢рзНржмрж╛рж╕ ржЧржбрж╝рзЗ рждрзБрж▓рждрзЗ, ржЙржжрзНржмрзЗржЧрзЗрж░ ржорзВрж▓ ржХрж╛рж░ржг ржмрзБржЭрждрзЗ ржПржмржВ ржкрж╛рж░рж╕рзНржкрж░рж┐ржХржнрж╛ржмрзЗ ржЧрзНрж░рж╣ржгржпрзЛржЧрзНржп рж╕ржорж╛ржзрж╛ржи ржЦрзБржБржЬрзЗ ржкрзЗрждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред",
"ta": "роЪрпЖропро▓ро┐ро▓рпН роХрпЗроЯрпНроЯро▓рпН рооро▒рпНро▒рпБроорпН рокроЪрпНроЪро╛родрпНродро╛рокроорпН роХро╛роЯрпНроЯрпБро╡родрпБ роироорпНрокро┐роХрпНроХрпИропрпИ роЙро░рпБро╡ро╛роХрпНроХ, роХро╡ро▓рпИроХро│ро┐ройрпН роорпВро▓ роХро╛ро░рогродрпНродрпИрокрпН рокрпБро░ро┐роирпНродрпБроХрпКро│рпНро│ рооро▒рпНро▒рпБроорпН рокро░ро╕рпНрокро░ роПро▒рпНро▒рпБроХрпНроХрпКро│рпНро│роХрпНроХрпВроЯро┐роп родрпАро░рпНро╡рпБроХро│рпИроХрпН роХрогрпНроЯро▒ро┐роп роЙродро╡рпБроХро┐ро▒родрпБ."
}
}
]
}
];


  // Filter modules based on search query
  const filteredModules = trainingModules.filter(module => 
    module.title[language].toLowerCase().includes(searchQuery.toLowerCase()) ||
    module.content[language].description.toLowerCase().includes(searchQuery.toLowerCase())
  );

  // Handle module completion
  const completeModule = (moduleIndex, score) => {
    const newProgress = [...moduleProgress];
    newProgress[moduleIndex] = { completed: true, score };
    setModuleProgress(newProgress);
    
    // Award points based on performance
    const pointsEarned = score >= 80 ? 100 : score >= 60 ? 75 : 50;
    setTotalPoints(prev => prev + pointsEarned);
    
    // Increase learning streak
    setLearningStreak(prev => prev + 1);
  };

  // Handle quiz submission
  const handleQuizSubmit = () => {
    const score = Math.round((quizScore / trainingModules[currentModule].quiz.length) * 100);
    completeModule(currentModule, score);
    setShowQuiz(false);
    setCurrentQuestion(0);
    setQuizScore(0);
    setSelectedAnswer(null);
  };

  // Handle answer selection
  const handleAnswerSelect = (answerId) => {
    setSelectedAnswer(answerId);
    if (answerId === trainingModules[currentModule].quiz[currentQuestion].correctAnswer) {
      setQuizScore(prev => prev + 1);
    }
  };

  // Toggle bookmark
  const toggleBookmark = (moduleId) => {
    if (bookmarkedModules.includes(moduleId)) {
      setBookmarkedModules(bookmarkedModules.filter(id => id !== moduleId));
    } else {
      setBookmarkedModules([...bookmarkedModules, moduleId]);
    }
  };

  // Navigation functions
  const nextModule = () => {
    if (currentModule < trainingModules.length - 1) {
      setCurrentModule(prev => prev + 1);
    }
  };

  const prevModule = () => {
    if (currentModule > 0) {
      setCurrentModule(prev => prev - 1);
    }
  };

  // Language options
  const languages = [
    { code: 'en', name: 'English', flag: 'ЁЯЗ║ЁЯЗ╕' },
    { code: 'hi', name: 'Hindi', flag: 'ЁЯЗоЁЯЗ│' },
    { code: 'bn', name: 'Bengali', flag: 'ЁЯЗзЁЯЗй' },
    { code: 'ta', name: 'Tamil', flag: 'ЁЯЗоЁЯЗ│' }
  ];

  // Animation variants
  const fadeIn = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.5 } }
  };

  // Progress calculation
  const overallProgress = Math.round(
    (moduleProgress.filter(m => m.completed).length / trainingModules.length) * 100
  );

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900 text-gray-800 dark:text-gray-200 transition-colors duration-300">
      {/* Navigation Bar */}
      <nav className="bg-white dark:bg-green-800 shadow-md py-4 px-6 flex justify-between items-center">
        <div className="flex items-center">
          {/* <div className="flex items-center space-x-2">
            <Recycle size={32} className="text-green-600 dark:text-green-300" />
            <span className="text-xl font-bold text-green-700 dark:text-white">GreenWork</span>
          </div> */}
          
          <div className="hidden md:flex ml-10 space-x-6">
            <button 
              className={`px-3 py-2 rounded-lg font-medium ${activeTab === 'training' ? 'bg-green-100 dark:bg-green-700 text-green-700 dark:text-white' : 'hover:text-green-600 dark:hover:text-green-300'}`}
              onClick={() => setActiveTab('training')}
            >
              Training
            </button>
            <button 
              className={`px-3 py-2 rounded-lg font-medium ${activeTab === 'progress' ? 'bg-green-100 dark:bg-green-700 text-green-700 dark:text-white' : 'hover:text-green-600 dark:hover:text-green-300'}`}
              onClick={() => setActiveTab('progress')}
            >
              My Progress
            </button>
            <button 
              className={`px-3 py-2 rounded-lg font-medium ${activeTab === 'community' ? 'bg-green-100 dark:bg-green-700 text-green-700 dark:text-white' : 'hover:text-green-600 dark:hover:text-green-300'}`}
              onClick={() => setActiveTab('community')}
            >
              Community
            </button>
          </div>
        </div>
        
        <div className="flex items-center space-x-4">
          <div className="hidden md:flex items-center space-x-2 bg-green-50 dark:bg-green-900 rounded-full py-1 px-3">
            <Trophy size={18} className="text-yellow-500" />
            <span className="font-medium">{totalPoints}</span>
          </div>
          
          <div className="relative">
            <button 
              className="flex items-center space-x-2 bg-green-100 dark:bg-green-700 hover:bg-green-200 dark:hover:bg-green-600 rounded-full py-2 px-4 transition-colors"
              onClick={() => setShowMobileMenu(!showMobileMenu)}
            >
              <User size={20} />
              <span className="hidden sm:block truncate max-w-xs">{userName}</span>
              <div className="w-2 h-2 bg-green-500 rounded-full"></div>
            </button>
            
            {showMobileMenu && (
              <div className="absolute right-0 mt-2 w-48 bg-white dark:bg-green-800 rounded-md shadow-lg py-1 z-10">
                <button className="flex items-center w-full px-4 py-2 text-sm hover:bg-green-100 dark:hover:bg-green-700">
                  <User size={16} className="mr-2" />
                  Profile
                </button>
                <button className="flex items-center w-full px-4 py-2 text-sm hover:bg-green-100 dark:hover:bg-green-700">
                  <Bookmark size={16} className="mr-2" />
                  Bookmarks
                </button>
                <button className="flex items-center w-full px-4 py-2 text-sm hover:bg-green-100 dark:hover:bg-green-700">
                  <LogOut size={16} className="mr-2" />
                  Sign Out
                </button>
              </div>
            )}
          </div>
        </div>
      </nav>

      {/* Mobile Menu */}
      <AnimatePresence>
        {showMobileMenu && (
          <motion.div 
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: 'auto' }}
            exit={{ opacity: 0, height: 0 }}
            className="md:hidden bg-white dark:bg-green-800 shadow-md px-6 py-4"
          >
            <div className="flex flex-col space-y-3">
              <button 
                className={`py-2 px-4 rounded-lg ${activeTab === 'training' ? 'bg-green-100 dark:bg-green-700 text-green-700 dark:text-white' : ''}`}
                onClick={() => { setActiveTab('training'); setShowMobileMenu(false); }}
              >
                Training
              </button>
              <button 
                className={`py-2 px-4 rounded-lg ${activeTab === 'progress' ? 'bg-green-100 dark:bg-green-700 text-green-700 dark:text-white' : ''}`}
                onClick={() => { setActiveTab('progress'); setShowMobileMenu(false); }}
              >
                My Progress
              </button>
              <button 
                className={`py-2 px-4 rounded-lg ${activeTab === 'community' ? 'bg-green-100 dark:bg-green-700 text-green-700 dark:text-white' : ''}`}
                onClick={() => { setActiveTab('community'); setShowMobileMenu(false); }}
              >
                Community
              </button>
            </div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* Main Content */}
      <div className="container mx-auto px-4 py-8">
        {/* Header Section */}
        <div className="flex flex-col md:flex-row justify-between items-start md:items-center mb-8">
          <div>
            <h1 className="text-3xl font-bold text-green-700 dark:text-green-300">Worker Training Program</h1>
            <p className="text-gray-600 dark:text-gray-300 mt-2">
              Build your skills in waste management and become a sustainability champion
            </p>
          </div>
          
          <div className="flex items-center space-x-4 mt-4 md:mt-0">
            {/* Language Selector */}
            <div className="relative">
              <select 
                className="bg-white dark:bg-green-800 border border-green-300 dark:border-green-600 rounded-lg py-2 pl-3 pr-10 appearance-none focus:outline-none focus:ring-2 focus:ring-green-500"
                value={language}
                onChange={(e) => setLanguage(e.target.value)}
              >
                {languages.map(lang => (
                  <option key={lang.code} value={lang.code}>
                    {lang.flag} {lang.name}
                  </option>
                ))}
              </select>
              <Globe size={16} className="absolute right-3 top-3 text-gray-500 pointer-events-none" />
            </div>
            
            {/* Search Bar */}
            <div className="relative hidden md:block">
              <Search size={18} className="absolute left-3 top-2.5 text-gray-500" />
              <input
                type="text"
                placeholder="Search modules..."
                className="pl-10 pr-4 py-2 bg-white dark:bg-green-800 border border-green-300 dark:border-green-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
              />
            </div>
            
            {/* TTS Toggle */}
            <button 
              className={`p-2 rounded-lg ${ttsEnabled ? 'bg-green-100 dark:bg-green-700 text-green-700 dark:text-green-300' : 'bg-gray-100 dark:bg-gray-700'}`}
              onClick={() => setTtsEnabled(!ttsEnabled)}
              aria-label="Text-to-speech"
            >
              <Volume2 size={20} />
            </button>
            
            {/* Help Button */}
            <button 
              className="p-2 rounded-lg bg-gray-100 dark:bg-gray-700 hover:bg-green-100 dark:hover:bg-green-700"
              onClick={() => setShowHelp(true)}
              aria-label="Help"
            >
              <HelpCircle size={20} />
            </button>
          </div>
        </div>
        
        {/* Mobile Search */}
        <div className="md:hidden mb-6">
          <div className="relative">
            <Search size={18} className="absolute left-3 top-2.5 text-gray-500" />
            <input
              type="text"
              placeholder="Search modules..."
              className="w-full pl-10 pr-4 py-2 bg-white dark:bg-green-800 border border-green-300 dark:border-green-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
            />
          </div>
        </div>
        
        {/* Progress Overview */}
        <motion.div 
          initial="hidden"
          animate="visible"
          variants={fadeIn}
          className="bg-white dark:bg-green-800 rounded-xl shadow-md p-6 mb-8"
        >
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="flex items-center space-x-4 mb-4 md:mb-0">
              <div className="relative w-16 h-16">
                <svg className="w-full h-full" viewBox="0 0 36 36">
                  <path
                    d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831"
                    fill="none"
                    stroke="#eee"
                    strokeWidth="3"
                  />
                  <path
                    d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831"
                    fill="none"
                    stroke="#10b981"
                    strokeWidth="3"
                    strokeDasharray={`${overallProgress}, 100`}
                  />
                </svg>
                <div className="absolute inset-0 flex items-center justify-center">
                  <span className="text-sm font-bold">{overallProgress}%</span>
                </div>
              </div>
              <div>
                <h3 className="font-semibold">Overall Progress</h3>
                <p className="text-sm text-gray-600 dark:text-gray-300">
                  {moduleProgress.filter(m => m.completed).length} of {trainingModules.length} modules completed
                </p>
              </div>
            </div>
            
            <div className="flex items-center space-x-6">
              <div className="text-center">
                <div className="flex items-center justify-center space-x-1">
                  <Calendar size={18} className="text-green-600 dark:text-green-400" />
                  <span className="font-semibold">{learningStreak} days</span>
                </div>
                <p className="text-xs text-gray-600 dark:text-gray-300">Learning streak</p>
              </div>
              
              <div className="text-center">
                <div className="flex items-center justify-center space-x-1">
                  <Trophy size={18} className="text-yellow-500" />
                  <span className="font-semibold">{totalPoints}</span>
                </div>
                <p className="text-xs text-gray-600 dark:text-gray-300">Total points</p>
              </div>
              
              <div className="text-center">
                <div className="flex items-center justify-center space-x-1">
                  <Star size={18} className="text-blue-500" />
                  <span className="font-semibold">{bookmarkedModules.length}</span>
                </div>
                <p className="text-xs text-gray-600 dark:text-gray-300">Saved</p>
              </div>
            </div>
          </div>
        </motion.div>
        
        {/* Main Content Area */}
        <div className="flex flex-col lg:flex-row gap-8">
          {/* Module List Sidebar */}
          <div className="lg:w-1/4">
            <div className="bg-white dark:bg-green-800 rounded-xl shadow-md overflow-hidden">
              <div className="p-4 border-b border-green-100 dark:border-green-700">
                <h3 className="font-semibold flex items-center">
                  <BookOpen size={18} className="mr-2" />
                  Training Modules
                </h3>
              </div>
              
              <div className="max-h-96 overflow-y-auto">
                {filteredModules.map((module, index) => (
                  <div 
                    key={module.id}
                    className={`p-4 border-b border-green-100 dark:border-green-700 cursor-pointer transition-colors ${
                      currentModule === index 
                        ? 'bg-green-50 dark:bg-green-900' 
                        : 'hover:bg-gray-50 dark:hover:bg-green-700'
                    }`}
                    onClick={() => setCurrentModule(index)}
                  >
                    <div className="flex justify-between items-start">
                      <div className="flex items-start space-x-3">
                        <div className="text-2xl mt-1">{module.icon}</div>
                        <div>
                          <h4 className="font-medium">{module.title[language]}</h4>
                          <div className="flex items-center mt-1 text-sm text-gray-600 dark:text-gray-300">
                            <Clock size={14} className="mr-1" />
                            {module.duration}
                          </div>
                        </div>
                      </div>
                      
                      <div className="flex items-center space-x-2">
                        <button 
                          onClick={(e) => {
                            e.stopPropagation();
                            toggleBookmark(module.id);
                          }}
                          className="text-gray-400 hover:text-yellow-500"
                        >
                          <Bookmark 
                            size={16} 
                            fill={bookmarkedModules.includes(module.id) ? 'currentColor' : 'none'} 
                          />
                        </button>
                        
                        {moduleProgress[index].completed ? (
                          <CheckCircle size={18} className="text-green-500" />
                        ) : (
                          <div className="w-5 h-5 rounded-full border-2 border-gray-300"></div>
                        )}
                      </div>
                    </div>
                    
                    {/* Progress bar for completed modules */}
                    {moduleProgress[index].completed && (
                      <div className="mt-3">
                        <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2">
                          <div 
                            className="bg-green-500 h-2 rounded-full" 
                            style={{ width: `${moduleProgress[index].score}%` }}
                          ></div>
                        </div>
                        <div className="text-xs text-gray-600 dark:text-gray-300 mt-1">
                          Score: {moduleProgress[index].score}%
                        </div>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </div>
            
            {/* Quick Actions */}
            <div className="mt-6 bg-white dark:bg-green-800 rounded-xl shadow-md p-4">
              <h3 className="font-semibold mb-3">Quick Actions</h3>
              <div className="space-y-2">
                <button className="w-full flex items-center justify-between p-3 bg-green-50 dark:bg-green-900 hover:bg-green-100 dark:hover:bg-green-700 rounded-lg transition-colors">
                  <span>Continue Learning</span>
                  <Play size={16} />
                </button>
                <button className="w-full flex items-center justify-between p-3 bg-green-50 dark:bg-green-900 hover:bg-green-100 dark:hover:bg-green-700 rounded-lg transition-colors">
                  <span>Take Assessment</span>
                  <BarChart3 size={16} />
                </button>
                <button 
                  className="w-full flex items-center justify-between p-3 bg-green-50 dark:bg-green-900 hover:bg-green-100 dark:hover:bg-green-700 rounded-lg transition-colors"
                  onClick={() => setShowCertificate(true)}
                >
                  <span>View Certificate</span>
                  <Award size={16} />
                </button>
              </div>
            </div>
          </div>
          
          {/* Module Content */}
          <div className="lg:w-3/4">
            <div className="bg-white dark:bg-green-800 rounded-xl shadow-md overflow-hidden">
              <div className="p-6 border-b border-green-100 dark:border-green-700">
                <div className="flex justify-between items-center mb-4">
                  <h2 className="text-2xl font-bold">
                    {trainingModules[currentModule].title[language]}
                  </h2>
                  <span className="flex items-center text-sm text-gray-500 dark:text-gray-300">
                    <Clock size={16} className="mr-1" />
                    {trainingModules[currentModule].duration}
                  </span>
                </div>
                
                <p className="text-gray-600 dark:text-gray-300 mb-6">
                  {trainingModules[currentModule].content[language].description}
                </p>
                
                <div className="flex flex-wrap gap-3">
                  <button 
                    className={`flex items-center px-4 py-2 rounded-lg ${showResources ? 'bg-green-100 dark:bg-green-700 text-green-700 dark:text-green-300' : 'bg-gray-100 dark:bg-gray-700'}`}
                    onClick={() => setShowResources(true)}
                  >
                    <FileText size={16} className="mr-2" />
                    Resources
                  </button>
                  <button 
                    className={`flex items-center px-4 py-2 rounded-lg ${!showResources ? 'bg-green-100 dark:bg-green-700 text-green-700 dark:text-green-300' : 'bg-gray-100 dark:bg-gray-700'}`}
                    onClick={() => setShowResources(false)}
                  >
                    <BarChart3 size={16} className="mr-2" />
                    Quiz Prep
                  </button>
                  
                  {!moduleProgress[currentModule].completed && (
                    <button 
                      className="flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg ml-auto"
                      onClick={() => setShowQuiz(true)}
                    >
                      Take Quiz
                      <ChevronRight size={16} className="ml-1" />
                    </button>
                  )}
                </div>
              </div>
              
              {/* Resources Section */}
              {showResources && (
                <div className="p-6">
                  <h3 className="text-lg font-semibold mb-4">Learning Resources</h3>
                  
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    {trainingModules[currentModule].content[language].resources.map((resource, index) => (
                      <motion.div 
                        key={index}
                        initial={{ opacity: 0, y: 10 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: index * 0.1 }}
                        className={`border rounded-lg p-4 cursor-pointer transition-all ${
                          activeResource === index 
                            ? 'border-green-500 bg-green-50 dark:bg-green-900' 
                            : 'border-gray-200 dark:border-gray-700 hover:border-green-300 dark:hover:border-green-600'
                        }`}
                        onClick={() => setActiveResource(index)}
                      >
                        <div className="flex items-start space-x-3">
                          <div className={`p-2 rounded-lg ${
                            resource.type === 'video' ? 'bg-red-100 dark:bg-red-900 text-red-600 dark:text-red-300' :
                            resource.type === 'text' ? 'bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-300' :
                            resource.type === 'infographic' ? 'bg-purple-100 dark:bg-purple-900 text-purple-600 dark:text-purple-300' :
                            'bg-yellow-100 dark:bg-yellow-900 text-yellow-600 dark:text-yellow-300'
                          }`}>
                            {resource.type === 'video' && <Play size={16} />}
                            {resource.type === 'text' && <FileText size={16} />}
                            {resource.type === 'infographic' && <BarChart3 size={16} />}
                            {resource.type === 'interactive' && <TrendingUp size={16} />}
                          </div>
                          
                          <div>
                            <h4 className="font-medium">{resource.title}</h4>
                            {resource.duration && (
                              <p className="text-sm text-gray-600 dark:text-gray-300 mt-1">
                                Duration: {resource.duration}
                              </p>
                            )}
                          </div>
                        </div>
                        
                        {activeResource === index && (
                          <div className="mt-4">
                            {resource.type === 'video' && (
                              <div className="aspect-video bg-gray-200 dark:bg-gray-700 rounded-lg flex items-center justify-center">
                                <div className="text-center">
                                  <Play size={40} className="mx-auto text-gray-500" />
                                  <p className="mt-2 text-gray-600 dark:text-gray-300">Video playback would appear here</p>
                                </div>
                              </div>
                            )}
                            
                            {resource.type === 'text' && (
                              <div className="prose dark:prose-invert max-w-none">
                                <p className="text-gray-600 dark:text-gray-300">
                                  Detailed text content about {resource.title.toLowerCase()} would appear here. This would include important information, guidelines, and best practices related to the module topic.
                                </p>
                                <button className="flex items-center text-green-600 dark:text-green-400 mt-3">
                                  <Download size={16} className="mr-1" />
                                  Download PDF
                                </button>
                              </div>
                            )}
                            
                            {resource.type === 'infographic' && (
                              <div className="bg-gray-100 dark:bg-gray-800 p-4 rounded-lg">
                                <div className="h-48 bg-gray-300 dark:bg-gray-700 rounded flex items-center justify-center">
                                  <BarChart3 size={40} className="text-gray-500" />
                                </div>
                                <p className="text-center text-sm text-gray-600 dark:text-gray-300 mt-3">
                                  Visual infographic illustrating key concepts
                                </p>
                              </div>
                            )}
                            
                            {resource.type === 'interactive' && (
                              <div className="bg-gray-100 dark:bg-gray-800 p-4 rounded-lg">
                                <p className="text-gray-600 dark:text-gray-300 mb-3">
                                  Interactive exercise to practice what you've learned
                                </p>
                                <button className="w-full py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg">
                                  Start Exercise
                                </button>
                              </div>
                            )}
                          </div>
                        )}
                      </motion.div>
                    ))}
                  </div>
                </div>
              )}
              
              {/* Quiz Preparation Section */}
              {!showResources && (
                <div className="p-6">
                  <h3 className="text-lg font-semibold mb-4">Quiz Preparation</h3>
                  
                  <div className="bg-yellow-50 dark:bg-yellow-900/30 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4 mb-6">
                    <div className="flex items-start space-x-3">
                      <HelpCircle size={20} className="text-yellow-600 dark:text-yellow-400 mt-0.5" />
                      <div>
                        <h4 className="font-medium text-yellow-800 dark:text-yellow-300">What to Expect</h4>
                        <p className="text-yellow-700 dark:text-yellow-400 text-sm mt-1">
                          This quiz contains {trainingModules[currentModule].quiz.length} questions. You need to score at least 60% to pass and complete this module.
                        </p>
                      </div>
                    </div>
                  </div>
                  
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <h4 className="font-medium mb-3">Key Topics</h4>
                      <ul className="space-y-2">
                        {trainingModules[currentModule].quiz.map((question, index) => (
                          <li key={index} className="flex items-start">
                            <div className="bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300 rounded-full p-1 mr-2 mt-0.5">
                              <Target size={12} />
                            </div>
                            <span className="text-sm">{question.question[language].substring(0, 60)}...</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                    
                    <div>
                      <h4 className="font-medium mb-3">Tips for Success</h4>
                      <div className="bg-green-50 dark:bg-green-900/30 rounded-lg p-4">
                        <ul className="space-y-2 text-sm">
                          <li className="flex items-start">
                            <CheckCircle size={16} className="text-green-500 mr-2 mt-0.5 flex-shrink-0" />
                            <span>Review all learning materials before attempting the quiz</span>
                          </li>
                          <li className="flex items-start">
                            <CheckCircle size={16} className="text-green-500 mr-2 mt-0.5 flex-shrink-0" />
                            <span>Take notes on important concepts</span>
                          </li>
                          <li className="flex items-start">
                            <CheckCircle size={16} className="text-green-500 mr-2 mt-0.5 flex-shrink-0" />
                            <span>Don't rush - read each question carefully</span>
                          </li>
                        </ul>
                      </div>
                      
                      <button 
                        className="w-full mt-4 py-3 bg-green-600 hover:bg-green-700 text-white rounded-lg font-medium flex items-center justify-center"
                        onClick={() => setShowQuiz(true)}
                      >
                        Start Quiz
                        <ChevronRight size={18} className="ml-1" />
                      </button>
                    </div>
                  </div>
                </div>
              )}
            </div>
            
            {/* Navigation Between Modules */}
            <div className="flex justify-between mt-6">
              <button 
                className="flex items-center px-4 py-2 bg-white dark:bg-green-800 border border-green-300 dark:border-green-600 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed"
                onClick={prevModule}
                disabled={currentModule === 0}
              >
                <ChevronLeft size={16} className="mr-1" />
                Previous
              </button>
              
              <button 
                className="flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg disabled:opacity-50 disabled:cursor-not-allowed"
                onClick={nextModule}
                disabled={currentModule === trainingModules.length - 1}
              >
                Next
                <ChevronRight size={16} className="ml-1" />
              </button>
            </div>
          </div>
        </div>
      </div>
      
      {/* Quiz Modal */}
      <AnimatePresence>
        {showQuiz && (
          <motion.div 
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50"
          >
            <motion.div 
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.9, opacity: 0 }}
              className="bg-white dark:bg-green-800 rounded-xl shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto"
            >
              <div className="p-6 border-b border-green-100 dark:border-green-700">
                <div className="flex justify-between items-center mb-4">
                  <h3 className="text-xl font-bold">
                    {trainingModules[currentModule].title[language]} - Quiz
                  </h3>
                  <button onClick={() => setShowQuiz(false)}>
                    <X size={24} />
                  </button>
                </div>
                
                <div className="flex items-center text-sm text-gray-600 dark:text-gray-300">
                  <span>Question {currentQuestion + 1} of {trainingModules[currentModule].quiz.length}</span>
                  <span className="mx-2">тАв</span>
                  <span>{quizScore} correct</span>
                </div>
                
                <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mt-2">
                  <div 
                    className="bg-green-500 h-2 rounded-full" 
                    style={{ width: `${((currentQuestion + 1) / trainingModules[currentModule].quiz.length) * 100}%` }}
                  ></div>
                </div>
              </div>
              
              <div className="p-6">
                <h4 className="text-lg font-medium mb-6">
                  {trainingModules[currentModule].quiz[currentQuestion].question[language]}
                </h4>
                
                <div className="space-y-3">
                  {trainingModules[currentModule].quiz[currentQuestion].options.map(option => (
                    <button
                      key={option.id}
                      className={`w-full text-left p-4 rounded-lg border transition-all ${
                        selectedAnswer === option.id
                          ? option.id === trainingModules[currentModule].quiz[currentQuestion].correctAnswer
                            ? 'border-green-500 bg-green-50 dark:bg-green-900'
                            : 'border-red-500 bg-red-50 dark:bg-red-900'
                          : 'border-gray-200 dark:border-gray-700 hover:border-green-300 dark:hover:border-green-600'
                      }`}
                      onClick={() => handleAnswerSelect(option.id)}
                      disabled={selectedAnswer !== null}
                    >
                      {option.text[language]}
                    </button>
                  ))}
                </div>
                
                {selectedAnswer !== null && (
                  <motion.div 
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    className={`mt-6 p-4 rounded-lg ${
                      selectedAnswer === trainingModules[currentModule].quiz[currentQuestion].correctAnswer
                        ? 'bg-green-50 dark:bg-green-900 text-green-800 dark:text-green-200'
                        : 'bg-red-50 dark:bg-red-900 text-red-800 dark:text-red-200'
                    }`}
                  >
                    <div className="font-medium mb-2">
                      {selectedAnswer === trainingModules[currentModule].quiz[currentQuestion].correctAnswer
                        ? 'Correct!'
                        : 'Incorrect'
                      }
                    </div>
                    <p>{trainingModules[currentModule].quiz[currentQuestion].explanation[language]}</p>
                  </motion.div>
                )}
              </div>
              
              <div className="p-6 border-t border-green-100 dark:border-green-700 flex justify-between">
                <button
                  className="px-4 py-2 bg-gray-100 dark:bg-gray-700 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed"
                  onClick={() => setCurrentQuestion(prev => prev - 1)}
                  disabled={currentQuestion === 0}
                >
                  Previous
                </button>
                
                {currentQuestion < trainingModules[currentModule].quiz.length - 1 ? (
                  <button
                    className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg disabled:opacity-50 disabled:cursor-not-allowed"
                    onClick={() => {
                      setCurrentQuestion(prev => prev + 1);
                      setSelectedAnswer(null);
                    }}
                    disabled={selectedAnswer === null}
                  >
                    Next Question
                  </button>
                ) : (
                  <button
                    className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg"
                    onClick={handleQuizSubmit}
                    disabled={selectedAnswer === null}
                  >
                    Finish Quiz
                  </button>
                )}
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
      
      {/* Certificate Modal */}
      <AnimatePresence>
        {showCertificate && (
          <motion.div 
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50"
          >
            <motion.div 
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.9, opacity: 0 }}
              className="bg-white dark:bg-green-800 rounded-xl shadow-xl max-w-2xl w-full"
            >
              <div className="p-6 border-b border-green-100 dark:border-green-700 flex justify-between items-center">
                <h3 className="text-xl font-bold">Course Completion Certificate</h3>
                <button onClick={() => setShowCertificate(false)}>
                  <X size={24} />
                </button>
              </div>
              
              <div className="p-8">
                <div className="border-2 border-green-500 rounded-lg p-8 text-center">
                  <div className="mb-6">
                    <Award size={48} className="mx-auto text-green-500" />
                  </div>
                  
                  <h4 className="text-2xl font-bold mb-2">Certificate of Completion</h4>
                  <p className="text-gray-600 dark:text-gray-300 mb-6">This certifies that</p>
                  
                  <h5 className="text-3xl font-bold text-green-600 dark:text-green-400 mb-6">{userName}</h5>
                  
                  <p className="text-gray-600 dark:text-gray-300 mb-6">
                    has successfully completed the Waste Management Training Program with a score of {overallProgress}%
                  </p>
                  
                  <div className="flex justify-center space-x-10 mt-8">
                    <div>
                      <p className="text-sm text-gray-500 dark:text-gray-400">Date</p>
                      <p className="font-medium">{new Date().toLocaleDateString()}</p>
                    </div>
                    <div>
                      <p className="text-sm text-gray-500 dark:text-gray-400">Certificate ID</p>
                      <p className="font-medium">GW-{Math.random().toString(36).substr(2, 9).toUpperCase()}</p>
                    </div>
                  </div>
                </div>
                
                <div className="flex justify-center mt-6 space-x-4">
                  <button className="flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg">
                    <Download size={16} className="mr-2" />
                    Download PDF
                  </button>
                  <button className="flex items-center px-4 py-2 border border-green-600 text-green-600 dark:text-green-400 rounded-lg">
                    <Share2 size={16} className="mr-2" />
                    Share
                  </button>
                </div>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
      
      {/* Help Modal */}
      <AnimatePresence>
        {showHelp && (
          <motion.div 
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50"
          >
            <motion.div 
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.9, opacity: 0 }}
              className="bg-white dark:bg-green-800 rounded-xl shadow-xl max-w-2xl w-full"
            >
              <div className="p-6 border-b border-green-100 dark:border-green-700 flex justify-between items-center">
                <h3 className="text-xl font-bold">Help & Support</h3>
                <button onClick={() => setShowHelp(false)}>
                  <X size={24} />
                </button>
              </div>
              
              <div className="p-6">
                <div className="prose dark:prose-invert max-w-none">
                  <h4>How to Use This Platform</h4>
                  <p>This training platform is designed to help waste management workers learn essential skills and knowledge. Here's how to make the most of it:</p>
                  
                  <h5>Navigation</h5>
                  <ul>
                    <li>Use the sidebar to browse through different modules</li>
                    <li>Click on any module to view its content</li>
                    <li>Use the next/previous buttons to navigate between modules</li>
                  </ul>
                  
                  <h5>Learning Resources</h5>
                  <ul>
                    <li>Each module contains videos, text resources, infographics, and interactive exercises</li>
                    <li>Click on any resource to view it in detail</li>
                    <li>Bookmark important modules for quick access later</li>
                  </ul>
                  
                  <h5>Quizzes</h5>
                  <ul>
                    <li>Each module ends with a quiz to test your understanding</li>
                    <li>You need to score at least 60% to pass a module</li>
                    <li>You can retake quizzes if you don't pass on the first attempt</li>
                  </ul>
                  
                  <h5>Getting Help</h5>
                  <p>If you need additional assistance, please contact your supervisor or the training coordinator at your facility.</p>
                </div>
                
                <div className="mt-6 pt-6 border-t border-green-100 dark:border-green-700">
                  <h5 className="font-medium mb-3">Frequently Asked Questions</h5>
                  
                  <div className="space-y-4">
                    <div>
                      <h6 className="font-medium">How do I reset my password?</h6>
                      <p className="text-sm text-gray-600 dark:text-gray-300">Contact your facility administrator to reset your password.</p>
                    </div>
                    
                    <div>
                      <h6 className="font-medium">What happens if I fail a quiz?</h6>
                      <p className="text-sm text-gray-600 dark:text-gray-300">You can retake the quiz after reviewing the module materials again.</p>
                    </div>
                    
                    <div>
                      <h6 className="font-medium">Can I access this training on my mobile phone?</h6>
                      <p className="text-sm text-gray-600 dark:text-gray-300">Yes, the platform is fully responsive and works on mobile devices.</p>
                    </div>
                  </div>
                </div>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
};

export default WorkerTraining;